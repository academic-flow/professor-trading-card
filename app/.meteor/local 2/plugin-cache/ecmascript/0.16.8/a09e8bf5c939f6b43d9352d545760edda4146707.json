{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet getBrowserInfo;\nmodule.link(\"../utils\", {\n  getBrowserInfo(v) {\n    getBrowserInfo = v;\n  }\n}, 1);\nlet originalMeteorDebug = Meteor._debug;\nlet lastMessageToIgnore = null;\nlet messagesToIgnore = 0;\n\n// Sometimes one of the other error reporter tracks an error, but Meteor also\n// sends the details to Meteor._debug. In some places, Meteor splits the\n// information across multiple Meteor._debug calls.\n//\n// Does not report Meteor._debug errors until it sees the given message\n// or it has ignored maxMessages.\nKadira._ignoreDebugMessagesUntil = function (message, maxMessages) {\n  lastMessageToIgnore = message;\n  messagesToIgnore = maxMessages;\n};\nMeteor._debug = function (m, s) {\n  // We need to assign variables like this. Otherwise,\n  // we can't see proper error messages.\n  // See: https://github.com/meteorhacks/kadira/issues/193\n  let message = m;\n  let stack = s;\n  let args = arguments;\n  function runOriginal() {\n    return originalMeteorDebug.apply(Meteor, args);\n  }\n\n  // track only if error tracking is enabled\n  if (!Kadira.options.enableErrorTracking) {\n    return runOriginal();\n  }\n\n  // do not track if a zone is available (let zone handle the error)\n  if (window.zone) {\n    return runOriginal();\n  }\n\n  // Do not report messages until either we see the\n  // lastMessageToIgnore or we have ignored the number of\n  // messages in messagesToIgnore\n  if (lastMessageToIgnore) {\n    if (message === lastMessageToIgnore || messagesToIgnore === 1) {\n      lastMessageToIgnore = null;\n      messagesToIgnore = 0;\n    } else {\n      messagesToIgnore -= 1;\n    }\n    return runOriginal();\n  }\n\n  // We hate Meteor._debug (no single usage pattern)\n  if (message instanceof Error) {\n    stack = message.stack;\n    message = message.message;\n  } else if (typeof message === 'string' && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  } else if (typeof message === 'string' && stack instanceof Error) {\n    const separator = message.endsWith(':') ? '' : ':';\n    message = \"\".concat(message).concat(separator, \" \").concat(stack.message);\n    stack = getStackFromMessage(stack.stack);\n  }\n\n  // sometimes Meteor._debug is called with the stack concat to the message\n  // FIXME Meteor._debug can be called in many ways\n  if (message && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  }\n  let now = new Date().getTime();\n  Kadira.errors.sendError({\n    appId: Kadira.options.appId,\n    name: message,\n    type: 'client',\n    startTime: now,\n    subType: 'meteor._debug',\n    info: getBrowserInfo(),\n    stacks: JSON.stringify([{\n      at: now,\n      events: [],\n      stack\n    }])\n  });\n  return runOriginal();\n};\n\n// Identifies lines that are a stack trace frame:\n// 1. Has \"at\" proceeded and followed by at least one space\n// 2. Or has an \"@\" symbol\nlet stackRegex = /(^.*@.*$|^\\s+at\\s.+$)/gm;\nfunction getStackFromMessage(message) {\n  // add empty string to add the empty line at start\n  let stack = [''];\n  let match;\n  // eslint-disable-next-line no-cond-assign\n  while (match = stackRegex.exec(message)) {\n    stack.push(match[0]);\n  }\n  return stack.join('\\n');\n}\nfunction firstLine(message) {\n  return message.split('\\n')[0];\n}","map":{"version":3,"names":["Meteor","module","link","v","getBrowserInfo","originalMeteorDebug","_debug","lastMessageToIgnore","messagesToIgnore","Kadira","_ignoreDebugMessagesUntil","message","maxMessages","m","s","stack","args","arguments","runOriginal","apply","options","enableErrorTracking","window","zone","Error","undefined","getStackFromMessage","firstLine","separator","endsWith","concat","now","Date","getTime","errors","sendError","appId","name","type","startTime","subType","info","stacks","JSON","stringify","at","events","stackRegex","match","exec","push","join","split"],"sources":["packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { getBrowserInfo } from '../utils';\n\nlet originalMeteorDebug = Meteor._debug;\n\nlet lastMessageToIgnore = null;\nlet messagesToIgnore = 0;\n\n// Sometimes one of the other error reporter tracks an error, but Meteor also\n// sends the details to Meteor._debug. In some places, Meteor splits the\n// information across multiple Meteor._debug calls.\n//\n// Does not report Meteor._debug errors until it sees the given message\n// or it has ignored maxMessages.\nKadira._ignoreDebugMessagesUntil = function (message, maxMessages) {\n  lastMessageToIgnore = message;\n  messagesToIgnore = maxMessages;\n};\n\nMeteor._debug = function (m, s) {\n  // We need to assign variables like this. Otherwise,\n  // we can't see proper error messages.\n  // See: https://github.com/meteorhacks/kadira/issues/193\n  let message = m;\n  let stack = s;\n  let args = arguments;\n\n  function runOriginal () {\n    return originalMeteorDebug.apply(Meteor, args);\n  }\n\n  // track only if error tracking is enabled\n  if (!Kadira.options.enableErrorTracking) {\n    return runOriginal();\n  }\n\n  // do not track if a zone is available (let zone handle the error)\n  if (window.zone) {\n    return runOriginal();\n  }\n\n  // Do not report messages until either we see the\n  // lastMessageToIgnore or we have ignored the number of\n  // messages in messagesToIgnore\n  if (lastMessageToIgnore) {\n    if (message === lastMessageToIgnore || messagesToIgnore === 1) {\n      lastMessageToIgnore = null;\n      messagesToIgnore = 0;\n    } else {\n      messagesToIgnore -= 1;\n    }\n\n    return runOriginal();\n  }\n\n  // We hate Meteor._debug (no single usage pattern)\n  if (message instanceof Error) {\n    stack = message.stack;\n    message = message.message;\n  } else if (typeof message === 'string' && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  } else if (typeof message === 'string' && stack instanceof Error) {\n    const separator = message.endsWith(':') ? '' : ':';\n    message = `${message}${separator} ${stack.message}`;\n    stack = getStackFromMessage(stack.stack);\n  }\n\n  // sometimes Meteor._debug is called with the stack concat to the message\n  // FIXME Meteor._debug can be called in many ways\n  if (message && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  }\n\n  let now = new Date().getTime();\n  Kadira.errors.sendError({\n    appId: Kadira.options.appId,\n    name: message,\n    type: 'client',\n    startTime: now,\n    subType: 'meteor._debug',\n    info: getBrowserInfo(),\n    stacks: JSON.stringify([{at: now, events: [], stack}]),\n  });\n\n  return runOriginal();\n};\n\n// Identifies lines that are a stack trace frame:\n// 1. Has \"at\" proceeded and followed by at least one space\n// 2. Or has an \"@\" symbol\nlet stackRegex = /(^.*@.*$|^\\s+at\\s.+$)/gm;\nfunction getStackFromMessage (message) {\n  // add empty string to add the empty line at start\n  let stack = [''];\n  let match;\n  // eslint-disable-next-line no-cond-assign\n  while (match = stackRegex.exec(message)) {\n    stack.push(match[0]);\n  }\n  return stack.join('\\n');\n}\n\nfunction firstLine (message) {\n  return message.split('\\n')[0];\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"a09e8bf5c939f6b43d9352d545760edda4146707"}
