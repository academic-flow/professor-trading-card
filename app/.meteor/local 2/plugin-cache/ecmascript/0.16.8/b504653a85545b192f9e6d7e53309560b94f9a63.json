{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/ntp.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/montiapm:agent/lib/ntp.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/ntp.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/ntp.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/ntp.js"}},"code":"module.export({\n  Ntp: () => Ntp\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet Retry;\nmodule.link(\"./retry\", {\n  Retry(v) {\n    Retry = v;\n  }\n}, 1);\nconst logger = getLogger();\nclass Ntp {\n  constructor(options) {\n    const {\n      endpoint,\n      disableNtp\n    } = options || {};\n    this.isDisabled = disableNtp;\n    this.path = '/simplentp/sync';\n    this.setEndpoint(endpoint);\n    this.diff = 0;\n    this.synced = false;\n    this.reSyncCount = 0;\n    this.reSync = new Retry({\n      baseTimeout: 1000 * 60,\n      maxTimeout: 1000 * 60 * 10,\n      minCount: 0\n    });\n  }\n  static _now() {\n    const now = Date.now();\n    if (typeof now === 'number') {\n      return now;\n    } else if (now instanceof Date) {\n      // some extenal JS libraries override Date.now and returns a Date object\n      // which directly affect us. So we need to prepare for that\n      return now.getTime();\n    }\n    // trust me. I've seen now === undefined\n    return new Date().getTime();\n  }\n  setEndpoint(endpoint) {\n    this.endpoint = endpoint ? endpoint + this.path : null;\n  }\n  getTime() {\n    return Ntp._now() + Math.round(this.diff);\n  }\n  syncTime(localTime) {\n    return localTime + Math.ceil(this.diff);\n  }\n  sync() {\n    if (this.endpoint === null || this.isDisabled) {\n      return;\n    }\n    logger('init sync');\n    let self = this;\n    let retryCount = 0;\n    let retry = new Retry({\n      baseTimeout: 1000 * 20,\n      maxTimeout: 1000 * 60,\n      minCount: 1,\n      minTimeout: 0\n    });\n    syncTime();\n    function syncTime() {\n      if (retryCount < 5) {\n        logger('attempt time sync with server', retryCount);\n        // if we send 0 to the retryLater, cacheDns will run immediately\n        retry.retryLater(retryCount++, cacheDns);\n      } else {\n        logger('maximum retries reached');\n        self.reSync.retryLater(self.reSyncCount++, function () {\n          let args = [].slice.call(arguments);\n          self.sync(...args);\n        });\n      }\n    }\n\n    // first attempt is to cache dns. So, calculation does not\n    // include DNS resolution time\n    function cacheDns() {\n      self.getServerTime(function (err) {\n        if (!err) {\n          calculateTimeDiff();\n        } else {\n          syncTime();\n        }\n      });\n    }\n    function calculateTimeDiff() {\n      let clientStartTime = new Date().getTime();\n      self.getServerTime(function (err, serverTime) {\n        if (!err && serverTime) {\n          // (Date.now() + clientStartTime)/2 : Midpoint between req and res\n          let networkTime = (new Date().getTime() - clientStartTime) / 2;\n          let serverStartTime = serverTime - networkTime;\n          self.diff = serverStartTime - clientStartTime;\n          self.synced = true;\n          // we need to send 1 into retryLater.\n          self.reSync.retryLater(self.reSyncCount++, function () {\n            let args = [].slice.call(arguments);\n            self.sync(...args);\n          });\n          logger('successfully updated diff value', self.diff);\n        } else {\n          syncTime();\n        }\n      });\n    }\n  }\n  getServerTime(callback) {\n    let self = this;\n    if (self.endpoint === null) {\n      throw new Error('getServerTime requires the endpoint to be set');\n    }\n    if (self.isDisabled) {\n      throw new Error('getServerTime requires NTP to be enabled');\n    }\n    if (Meteor.isServer) {\n      Kadira.coreApi.get(self.path, {\n        noRetries: true\n      }).then(content => {\n        let serverTime = parseInt(content, 10);\n        callback(null, serverTime);\n      }).catch(err => {\n        callback(err);\n      });\n    } else {\n      Kadira._makeHttpRequest('GET', \"\".concat(self.endpoint, \"?noCache=\").concat(new Date().getTime(), \"-\").concat(Math.random()), function (err, res) {\n        if (err) {\n          callback(err);\n        } else {\n          let serverTime = parseInt(res.content, 10);\n          callback(null, serverTime);\n        }\n      });\n    }\n  }\n}\nfunction getLogger() {\n  if (Meteor.isServer) {\n    return Npm.require('debug')('kadira:ntp');\n  }\n  return function (message) {\n    let canLog = false;\n    try {\n      canLog = global.localStorage.getItem('LOG_KADIRA') !== null && typeof console !== 'undefined';\n      // eslint-disable-next-line no-empty\n    } catch (e) {} // older browsers can sometimes throw because of getItem\n\n    if (!canLog) {\n      return;\n    }\n    if (message) {\n      message = \"kadira:ntp \".concat(message);\n      arguments[0] = message;\n    }\n    console.log(...arguments);\n  };\n}","map":{"version":3,"names":["module","export","Ntp","Meteor","link","v","Retry","logger","getLogger","constructor","options","endpoint","disableNtp","isDisabled","path","setEndpoint","diff","synced","reSyncCount","reSync","baseTimeout","maxTimeout","minCount","_now","now","Date","getTime","Math","round","syncTime","localTime","ceil","sync","self","retryCount","retry","minTimeout","retryLater","cacheDns","args","slice","call","arguments","getServerTime","err","calculateTimeDiff","clientStartTime","serverTime","networkTime","serverStartTime","callback","Error","isServer","Kadira","coreApi","get","noRetries","then","content","parseInt","catch","_makeHttpRequest","concat","random","res","Npm","require","message","canLog","global","localStorage","getItem","console","e","log"],"sources":["packages/montiapm:agent/lib/ntp.js"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Retry } from './retry';\n\nconst logger = getLogger();\n\nexport class Ntp {\n  constructor (options) {\n    const {endpoint, disableNtp} = options || {};\n\n    this.isDisabled = disableNtp;\n    this.path = '/simplentp/sync';\n    this.setEndpoint(endpoint);\n    this.diff = 0;\n    this.synced = false;\n    this.reSyncCount = 0;\n    this.reSync = new Retry({\n      baseTimeout: 1000 * 60,\n      maxTimeout: 1000 * 60 * 10,\n      minCount: 0\n    });\n  }\n\n  static _now () {\n    const now = Date.now();\n    if (typeof now === 'number') {\n      return now;\n    } else if (now instanceof Date) {\n      // some extenal JS libraries override Date.now and returns a Date object\n      // which directly affect us. So we need to prepare for that\n      return now.getTime();\n    }\n    // trust me. I've seen now === undefined\n    return new Date().getTime();\n  }\n\n  setEndpoint (endpoint) {\n    this.endpoint = endpoint ? endpoint + this.path : null;\n  }\n\n  getTime () {\n    return Ntp._now() + Math.round(this.diff);\n  }\n\n  syncTime (localTime) {\n    return localTime + Math.ceil(this.diff);\n  }\n\n  sync () {\n    if (this.endpoint === null || this.isDisabled) {\n      return;\n    }\n\n    logger('init sync');\n    let self = this;\n    let retryCount = 0;\n\n    let retry = new Retry({\n      baseTimeout: 1000 * 20,\n      maxTimeout: 1000 * 60,\n      minCount: 1,\n      minTimeout: 0\n    });\n\n    syncTime();\n\n    function syncTime () {\n      if (retryCount < 5) {\n        logger('attempt time sync with server', retryCount);\n        // if we send 0 to the retryLater, cacheDns will run immediately\n        retry.retryLater(retryCount++, cacheDns);\n      } else {\n        logger('maximum retries reached');\n        self.reSync.retryLater(self.reSyncCount++, function () {\n          let args = [].slice.call(arguments);\n          self.sync(...args);\n        });\n      }\n    }\n\n    // first attempt is to cache dns. So, calculation does not\n    // include DNS resolution time\n    function cacheDns () {\n      self.getServerTime(function (err) {\n        if (!err) {\n          calculateTimeDiff();\n        } else {\n          syncTime();\n        }\n      });\n    }\n\n    function calculateTimeDiff () {\n      let clientStartTime = new Date().getTime();\n      self.getServerTime(function (err, serverTime) {\n        if (!err && serverTime) {\n          // (Date.now() + clientStartTime)/2 : Midpoint between req and res\n          let networkTime = (new Date().getTime() - clientStartTime) / 2;\n          let serverStartTime = serverTime - networkTime;\n          self.diff = serverStartTime - clientStartTime;\n          self.synced = true;\n          // we need to send 1 into retryLater.\n          self.reSync.retryLater(self.reSyncCount++, function () {\n            let args = [].slice.call(arguments);\n            self.sync(...args);\n          });\n          logger('successfully updated diff value', self.diff);\n        } else {\n          syncTime();\n        }\n      });\n    }\n  }\n\n  getServerTime (callback) {\n    let self = this;\n\n    if (self.endpoint === null) {\n      throw new Error('getServerTime requires the endpoint to be set');\n    }\n\n    if (self.isDisabled) {\n      throw new Error('getServerTime requires NTP to be enabled');\n    }\n\n    if (Meteor.isServer) {\n      Kadira.coreApi.get(self.path, {noRetries: true}).then(content => {\n        let serverTime = parseInt(content, 10);\n        callback(null, serverTime);\n      })\n        .catch(err => {\n          callback(err);\n        });\n    } else {\n      Kadira._makeHttpRequest('GET', `${self.endpoint}?noCache=${new Date().getTime()}-${Math.random()}`, function (err, res) {\n        if (err) {\n          callback(err);\n        } else {\n          let serverTime = parseInt(res.content, 10);\n          callback(null, serverTime);\n        }\n      });\n    }\n  }\n}\n\nfunction getLogger () {\n  if (Meteor.isServer) {\n    return Npm.require('debug')('kadira:ntp');\n  }\n\n  return function (message) {\n    let canLog = false;\n    try {\n      canLog = global.localStorage.getItem('LOG_KADIRA') !== null && typeof console !== 'undefined';\n      // eslint-disable-next-line no-empty\n    } catch (e) { } // older browsers can sometimes throw because of getItem\n\n    if (!canLog) {\n      return;\n    }\n\n    if (message) {\n      message = `kadira:ntp ${message}`;\n      arguments[0] = message;\n    }\n\n    console.log(...arguments);\n  };\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"b504653a85545b192f9e6d7e53309560b94f9a63"}
