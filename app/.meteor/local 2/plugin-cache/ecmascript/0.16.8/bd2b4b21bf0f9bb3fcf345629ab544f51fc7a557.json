{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/async.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/hijack/async.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/async.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/async.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/hijack/async.js"}},"code":"module.export({\n  wrapFibers: () => wrapFibers,\n  getFiberMetrics: () => getFiberMetrics,\n  resetFiberMetrics: () => resetFiberMetrics\n});\nlet Fibers = Npm.require('fibers');\nlet EventSymbol = Symbol('MontiEventSymbol');\nlet StartTracked = Symbol('MontiStartTracked');\nlet activeFibers = 0;\nlet wrapped = false;\nfunction endAsyncEvent(fiber) {\n  if (!fiber[EventSymbol]) return;\n  const kadiraInfo = Kadira._getInfo(fiber);\n  if (!kadiraInfo) return;\n  Kadira.tracer.eventEnd(kadiraInfo.trace, fiber[EventSymbol]);\n  fiber[EventSymbol] = null;\n}\nfunction wrapFibers() {\n  if (wrapped) {\n    return;\n  }\n  wrapped = true;\n  let originalYield = Fibers.yield;\n  Fibers.yield = function () {\n    let kadiraInfo = Kadira._getInfo();\n    if (kadiraInfo) {\n      let eventId = Kadira.tracer.event(kadiraInfo.trace, 'async');\n      if (eventId) {\n        // The event unique to this fiber\n        // Using a symbol since Meteor doesn't copy symbols to new fibers created\n        // for promises. This is needed so the correct event is ended when a fiber runs after being yielded.\n        Fibers.current[EventSymbol] = eventId;\n      }\n    }\n    return originalYield();\n  };\n  let originalRun = Fibers.prototype.run;\n  let originalThrowInto = Fibers.prototype.throwInto;\n  function ensureFiberCounted(fiber) {\n    // If fiber.started is true, and StartTracked is false\n    // then the fiber was probably initially ran before we wrapped Fibers.run\n    if (!fiber.started || !fiber[StartTracked]) {\n      activeFibers += 1;\n      fiber[StartTracked] = true;\n    }\n  }\n  Fibers.prototype.run = function (val) {\n    ensureFiberCounted(this);\n    if (this[EventSymbol]) {\n      endAsyncEvent(this);\n    } else if (!this.__kadiraInfo && Fibers.current && Fibers.current.__kadiraInfo) {\n      // Copy kadiraInfo when packages or user code creates a new fiber\n      // Done by many apps and packages in connect middleware since older\n      // versions of Meteor did not do it automatically\n      this.__kadiraInfo = Fibers.current.__kadiraInfo;\n    }\n    let result;\n    try {\n      result = originalRun.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n    return result;\n  };\n  Fibers.prototype.throwInto = function (val) {\n    ensureFiberCounted(this);\n    endAsyncEvent(this);\n    let result;\n    try {\n      result = originalThrowInto.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n    return result;\n  };\n}\nlet activeFiberTotal = 0;\nlet activeFiberCount = 0;\nlet previousTotalCreated = 0;\nsetInterval(() => {\n  activeFiberTotal += activeFibers;\n  activeFiberCount += 1;\n}, 1000);\nfunction getFiberMetrics() {\n  return {\n    created: Fibers.fibersCreated - previousTotalCreated,\n    active: activeFiberTotal / activeFiberCount,\n    poolSize: Fibers.poolSize\n  };\n}\nfunction resetFiberMetrics() {\n  activeFiberTotal = 0;\n  activeFiberCount = 0;\n  previousTotalCreated = Fibers.fibersCreated;\n}","map":{"version":3,"names":["module","export","wrapFibers","getFiberMetrics","resetFiberMetrics","Fibers","Npm","require","EventSymbol","Symbol","StartTracked","activeFibers","wrapped","endAsyncEvent","fiber","kadiraInfo","Kadira","_getInfo","tracer","eventEnd","trace","originalYield","yield","eventId","event","current","originalRun","prototype","run","originalThrowInto","throwInto","ensureFiberCounted","started","val","__kadiraInfo","result","call","activeFiberTotal","activeFiberCount","previousTotalCreated","setInterval","created","fibersCreated","active","poolSize"],"sources":["packages/montiapm:agent/lib/hijack/async.js"],"sourcesContent":["let Fibers = Npm.require('fibers');\nlet EventSymbol = Symbol('MontiEventSymbol');\nlet StartTracked = Symbol('MontiStartTracked');\n\nlet activeFibers = 0;\nlet wrapped = false;\n\nfunction endAsyncEvent (fiber) {\n  if (!fiber[EventSymbol]) return;\n\n  const kadiraInfo = Kadira._getInfo(fiber);\n\n  if (!kadiraInfo) return;\n\n  Kadira.tracer.eventEnd(kadiraInfo.trace, fiber[EventSymbol]);\n\n  fiber[EventSymbol] = null;\n}\n\nexport function wrapFibers () {\n  if (wrapped) {\n    return;\n  }\n  wrapped = true;\n\n  let originalYield = Fibers.yield;\n  Fibers.yield = function () {\n    let kadiraInfo = Kadira._getInfo();\n    if (kadiraInfo) {\n      let eventId = Kadira.tracer.event(kadiraInfo.trace, 'async');\n      if (eventId) {\n        // The event unique to this fiber\n        // Using a symbol since Meteor doesn't copy symbols to new fibers created\n        // for promises. This is needed so the correct event is ended when a fiber runs after being yielded.\n        Fibers.current[EventSymbol] = eventId;\n      }\n    }\n\n    return originalYield();\n  };\n\n  let originalRun = Fibers.prototype.run;\n  let originalThrowInto = Fibers.prototype.throwInto;\n\n  function ensureFiberCounted (fiber) {\n    // If fiber.started is true, and StartTracked is false\n    // then the fiber was probably initially ran before we wrapped Fibers.run\n    if (!fiber.started || !fiber[StartTracked]) {\n      activeFibers += 1;\n      fiber[StartTracked] = true;\n    }\n  }\n\n  Fibers.prototype.run = function (val) {\n    ensureFiberCounted(this);\n\n    if (this[EventSymbol]) {\n      endAsyncEvent(this);\n    } else if (!this.__kadiraInfo && Fibers.current && Fibers.current.__kadiraInfo) {\n      // Copy kadiraInfo when packages or user code creates a new fiber\n      // Done by many apps and packages in connect middleware since older\n      // versions of Meteor did not do it automatically\n      this.__kadiraInfo = Fibers.current.__kadiraInfo;\n    }\n\n    let result;\n    try {\n      result = originalRun.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n\n    return result;\n  };\n\n  Fibers.prototype.throwInto = function (val) {\n    ensureFiberCounted(this);\n    endAsyncEvent(this);\n\n    let result;\n\n    try {\n      result = originalThrowInto.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n\n    return result;\n  };\n}\n\nlet activeFiberTotal = 0;\nlet activeFiberCount = 0;\nlet previousTotalCreated = 0;\n\nsetInterval(() => {\n  activeFiberTotal += activeFibers;\n  activeFiberCount += 1;\n}, 1000);\n\nexport function getFiberMetrics () {\n  return {\n    created: Fibers.fibersCreated - previousTotalCreated,\n    active: activeFiberTotal / activeFiberCount,\n    poolSize: Fibers.poolSize\n  };\n}\n\nexport function resetFiberMetrics () {\n  activeFiberTotal = 0;\n  activeFiberCount = 0;\n  previousTotalCreated = Fibers.fibersCreated;\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"bd2b4b21bf0f9bb3fcf345629ab544f51fc7a557"}
