{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/wrap_webapp.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/hijack/wrap_webapp.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/wrap_webapp.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/wrap_webapp.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/hijack/wrap_webapp.js"}},"code":"module.export({\n  checkHandlersInFiber: () => checkHandlersInFiber,\n  wrapWebApp: () => wrapWebApp\n});\nlet WebAppInternals, WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebAppInternals(v) {\n    WebAppInternals = v;\n  },\n  WebApp(v) {\n    WebApp = v;\n  }\n}, 0);\nlet Fibers;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fibers = v;\n  }\n}, 1);\n// Maximum content-length size\nconst MAX_BODY_SIZE = 8000;\n// Maximum characters for stringified body\nconst MAX_STRINGIFIED_BODY_SIZE = 4000;\nconst canWrapStaticHandler = !!WebAppInternals.staticFilesByArch;\n\n// This checks if running on a version of Meteor that\n// wraps connect handlers in a fiber.\n// This check is dependant on Meteor's implementation of `use`,\n// which wraps every handler in a new fiber.\n// This will need to be updated if Meteor starts reusing\n// fibers when they exist.\nfunction checkHandlersInFiber() {\n  const handlersLength = WebApp.rawConnectHandlers.stack.length;\n  let inFiber = false;\n  let outsideFiber = Fibers.current;\n  WebApp.rawConnectHandlers.use((_req, _res, next) => {\n    inFiber = Fibers.current && Fibers.current !== outsideFiber;\n\n    // in case we didn't successfully remove this handler\n    // and it is a real request\n    next();\n  });\n  if (WebApp.rawConnectHandlers.stack[handlersLength]) {\n    let handler = WebApp.rawConnectHandlers.stack[handlersLength].handle;\n\n    // remove the newly added handler\n    // We remove it immediately so there is no opportunity for\n    // other code to add handlers first if the current fiber is yielded\n    // while running the handler\n    while (WebApp.rawConnectHandlers.stack.length > handlersLength) {\n      WebApp.rawConnectHandlers.stack.pop();\n    }\n    handler({}, {}, () => {});\n  }\n  return inFiber;\n}\nconst InfoSymbol = Symbol('MontiInfoSymbol');\nfunction wrapWebApp() {\n  return Promise.asyncApply(() => {\n    if (!checkHandlersInFiber() || !canWrapStaticHandler) {\n      return;\n    }\n    const parseUrl = require('parseurl');\n    WebAppInternals.registerBoilerplateDataCallback('__montiApmRouteName', function (request) {\n      // TODO: record in trace which arch is used\n\n      if (request[InfoSymbol]) {\n        request[InfoSymbol].isAppRoute = true;\n      }\n\n      // Let WebApp know we didn't make changes\n      // so it can use a cache\n      return false;\n    });\n\n    // We want the request object returned by categorizeRequest to have\n    // __kadiraInfo\n    let origCategorizeRequest = WebApp.categorizeRequest;\n    WebApp.categorizeRequest = function (req) {\n      let result = origCategorizeRequest.apply(this, arguments);\n      if (result && req.__kadiraInfo) {\n        result[InfoSymbol] = req.__kadiraInfo;\n      }\n      return result;\n    };\n\n    // Adding the handler directly to the stack\n    // to force it to be the first one to run\n    WebApp.rawConnectHandlers.stack.unshift({\n      route: '',\n      handle: (req, res, next) => {\n        const name = parseUrl(req).pathname;\n        const trace = Kadira.tracer.start(\"\".concat(req.method, \"-\").concat(name), 'http');\n        const headers = Kadira.tracer._applyObjectFilters(req.headers);\n        Kadira.tracer.event(trace, 'start', {\n          url: req.url,\n          method: req.method,\n          headers: JSON.stringify(headers)\n        });\n        req.__kadiraInfo = {\n          trace\n        };\n        res.on('finish', () => {\n          if (req.__kadiraInfo.asyncEvent) {\n            Kadira.tracer.eventEnd(trace, req.__kadiraInfo.asyncEvent);\n          }\n          Kadira.tracer.endLastEvent(trace);\n          if (req.__kadiraInfo.isStatic) {\n            trace.name = \"\".concat(req.method, \"-<static file>\");\n          } else if (req.__kadiraInfo.suggestedRouteName) {\n            trace.name = \"\".concat(req.method, \"-\").concat(req.__kadiraInfo.suggestedRouteName);\n          } else if (req.__kadiraInfo.isAppRoute) {\n            trace.name = \"\".concat(req.method, \"-<app>\");\n          }\n          const isJson = req.headers['content-type'] === 'application/json';\n          const hasSmallBody = req.headers['content-length'] > 0 && req.headers['content-length'] < MAX_BODY_SIZE;\n\n          // Check after all middleware have run to see if any of them\n          // set req.body\n          // Technically bodies can be used with any method, but since many load balancers and\n          // other software only support bodies for POST requests, we are\n          // not recording the body for other methods.\n          if (req.method === 'POST' && req.body && isJson && hasSmallBody) {\n            try {\n              let body = JSON.stringify(req.body);\n\n              // Check the body size again in case it is much\n              // larger than what was in the content-length header\n              if (body.length < MAX_STRINGIFIED_BODY_SIZE) {\n                trace.events[0].data.body = body;\n              }\n            } catch (e) {\n              // It is okay if this fails\n            }\n          }\n\n          // TODO: record status code\n          Kadira.tracer.event(trace, 'complete');\n          let built = Kadira.tracer.buildTrace(trace);\n          Kadira.models.http.processRequest(built, req, res);\n        });\n        next();\n      }\n    });\n    function wrapHandler(handler) {\n      // connect identifies error handles by them accepting\n      // four arguments\n      let errorHandler = handler.length === 4;\n      function wrapper(req, res, next) {\n        let error;\n        if (errorHandler) {\n          error = req;\n          req = res;\n          res = next;\n          next = arguments[3];\n        }\n        const kadiraInfo = req.__kadiraInfo;\n        Kadira._setInfo(kadiraInfo);\n        let nextCalled = false;\n        // TODO: track errors passed to next or thrown\n        function wrappedNext() {\n          if (kadiraInfo && kadiraInfo.asyncEvent) {\n            Kadira.tracer.eventEnd(req.__kadiraInfo.trace, req.__kadiraInfo.asyncEvent);\n            req.__kadiraInfo.asyncEvent = null;\n          }\n          nextCalled = true;\n          next(...arguments);\n        }\n        let potentialPromise;\n        if (errorHandler) {\n          potentialPromise = handler.call(this, error, req, res, wrappedNext);\n        } else {\n          potentialPromise = handler.call(this, req, res, wrappedNext);\n        }\n        if (potentialPromise && typeof potentialPromise.then === 'function') {\n          potentialPromise.then(() => {\n            // res.finished is depreciated in Node 13, but it is the only option\n            // for Node 12.9 and older.\n            if (kadiraInfo && !res.finished && !nextCalled) {\n              const lastEvent = Kadira.tracer.getLastEvent(kadiraInfo.trace);\n              if (lastEvent.endAt) {\n                // req is not done, and next has not been called\n                // create an async event that will end when either of those happens\n                kadiraInfo.asyncEvent = Kadira.tracer.event(kadiraInfo.trace, 'async');\n              }\n            }\n          });\n        }\n        return potentialPromise;\n      }\n      if (errorHandler) {\n        return function (error, req, res, next) {\n          return wrapper(error, req, res, next);\n        };\n      }\n      return function (req, res, next) {\n        return wrapper(req, res, next);\n      };\n    }\n    function wrapConnect(app, wrapStack) {\n      let oldUse = app.use;\n      if (wrapStack) {\n        // We need to set kadiraInfo on the Fiber the handler will run in.\n        // Meteor has already wrapped the handler to run it in a new Fiber\n        // by using Promise.asyncApply so we are not able to directly set it\n        // on that Fiber.\n        // Meteor's promise library copies properties from the current fiber to\n        // the new fiber, so we can wrap it in another Fiber with kadiraInfo set\n        // and Meteor will copy kadiraInfo to the new Fiber.\n        // It will only create the additional Fiber if it isn't already running in a Fiber\n        app.stack.forEach(entry => {\n          let wrappedHandler = wrapHandler(entry.handle);\n          if (entry.handle.length >= 4) {\n            // eslint-disable-next-line no-unused-vars,handle-callback-err\n            entry.handle = function (error, req, res, next) {\n              return Promise.asyncApply(wrappedHandler, this, arguments, true);\n            };\n          } else {\n            // eslint-disable-next-line no-unused-vars\n            entry.handle = function (req, res, next) {\n              return Promise.asyncApply(wrappedHandler, this, arguments, true);\n            };\n          }\n        });\n      }\n      app.use = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        args[args.length - 1] = wrapHandler(args[args.length - 1]);\n        return oldUse.apply(app, args);\n      };\n    }\n    wrapConnect(WebApp.rawConnectHandlers, false);\n    wrapConnect(WebAppInternals.meteorInternalHandlers, false);\n\n    // The oauth package and other core packages might have already added their middleware,\n    // so we need to wrap the existing middleware\n    wrapConnect(WebApp.connectHandlers, true);\n    wrapConnect(WebApp.connectApp, false);\n    let oldStaticFilesMiddleware = WebAppInternals.staticFilesMiddleware;\n    const staticHandler = wrapHandler(oldStaticFilesMiddleware.bind(WebAppInternals, WebAppInternals.staticFilesByArch));\n    WebAppInternals.staticFilesMiddleware = function (_staticFiles, req, res, next) {\n      if (req.__kadiraInfo) {\n        req.__kadiraInfo.isStatic = true;\n      }\n      return staticHandler(req, res, function () {\n        // if the request is for a static file, the static handler will end the response\n        // instead of calling next\n        req.__kadiraInfo.isStatic = false;\n        return next.apply(this, arguments);\n      });\n    };\n  });\n}","map":{"version":3,"names":["module","export","checkHandlersInFiber","wrapWebApp","WebAppInternals","WebApp","link","v","Fibers","default","MAX_BODY_SIZE","MAX_STRINGIFIED_BODY_SIZE","canWrapStaticHandler","staticFilesByArch","handlersLength","rawConnectHandlers","stack","length","inFiber","outsideFiber","current","use","_req","_res","next","handler","handle","pop","InfoSymbol","Symbol","Promise","asyncApply","parseUrl","require","registerBoilerplateDataCallback","request","isAppRoute","origCategorizeRequest","categorizeRequest","req","result","apply","arguments","__kadiraInfo","unshift","route","res","name","pathname","trace","Kadira","tracer","start","concat","method","headers","_applyObjectFilters","event","url","JSON","stringify","on","asyncEvent","eventEnd","endLastEvent","isStatic","suggestedRouteName","isJson","hasSmallBody","body","events","data","e","built","buildTrace","models","http","processRequest","wrapHandler","errorHandler","wrapper","error","kadiraInfo","_setInfo","nextCalled","wrappedNext","potentialPromise","call","then","finished","lastEvent","getLastEvent","endAt","wrapConnect","app","wrapStack","oldUse","forEach","entry","wrappedHandler","_len","args","Array","_key","meteorInternalHandlers","connectHandlers","connectApp","oldStaticFilesMiddleware","staticFilesMiddleware","staticHandler","bind","_staticFiles"],"sources":["packages/montiapm:agent/lib/hijack/wrap_webapp.js"],"sourcesContent":["import { WebAppInternals, WebApp } from 'meteor/webapp';\nimport Fibers from 'fibers';\n\n// Maximum content-length size\nconst MAX_BODY_SIZE = 8000;\n// Maximum characters for stringified body\nconst MAX_STRINGIFIED_BODY_SIZE = 4000;\n\nconst canWrapStaticHandler = !!WebAppInternals.staticFilesByArch;\n\n// This checks if running on a version of Meteor that\n// wraps connect handlers in a fiber.\n// This check is dependant on Meteor's implementation of `use`,\n// which wraps every handler in a new fiber.\n// This will need to be updated if Meteor starts reusing\n// fibers when they exist.\nexport function checkHandlersInFiber () {\n  const handlersLength = WebApp.rawConnectHandlers.stack.length;\n  let inFiber = false;\n  let outsideFiber = Fibers.current;\n\n  WebApp.rawConnectHandlers.use((_req, _res, next) => {\n    inFiber = Fibers.current && Fibers.current !== outsideFiber;\n\n    // in case we didn't successfully remove this handler\n    // and it is a real request\n    next();\n  });\n\n  if (WebApp.rawConnectHandlers.stack[handlersLength]) {\n    let handler = WebApp.rawConnectHandlers.stack[handlersLength].handle;\n\n    // remove the newly added handler\n    // We remove it immediately so there is no opportunity for\n    // other code to add handlers first if the current fiber is yielded\n    // while running the handler\n    while (WebApp.rawConnectHandlers.stack.length > handlersLength) {\n      WebApp.rawConnectHandlers.stack.pop();\n    }\n\n    handler({}, {}, () => {});\n  }\n\n  return inFiber;\n}\n\nconst InfoSymbol = Symbol('MontiInfoSymbol');\n\nexport async function wrapWebApp () {\n  if (!checkHandlersInFiber() || !canWrapStaticHandler) {\n    return;\n  }\n\n  const parseUrl = require('parseurl');\n\n  WebAppInternals.registerBoilerplateDataCallback('__montiApmRouteName', function (request) {\n    // TODO: record in trace which arch is used\n\n    if (request[InfoSymbol]) {\n      request[InfoSymbol].isAppRoute = true;\n    }\n\n    // Let WebApp know we didn't make changes\n    // so it can use a cache\n    return false;\n  });\n\n  // We want the request object returned by categorizeRequest to have\n  // __kadiraInfo\n  let origCategorizeRequest = WebApp.categorizeRequest;\n  WebApp.categorizeRequest = function (req) {\n    let result = origCategorizeRequest.apply(this, arguments);\n\n    if (result && req.__kadiraInfo) {\n      result[InfoSymbol] = req.__kadiraInfo;\n    }\n\n    return result;\n  };\n\n  // Adding the handler directly to the stack\n  // to force it to be the first one to run\n  WebApp.rawConnectHandlers.stack.unshift({\n    route: '',\n    handle: (req, res, next) => {\n      const name = parseUrl(req).pathname;\n      const trace = Kadira.tracer.start(`${req.method}-${name}`, 'http');\n\n      const headers = Kadira.tracer._applyObjectFilters(req.headers);\n      Kadira.tracer.event(trace, 'start', {\n        url: req.url,\n        method: req.method,\n        headers: JSON.stringify(headers),\n      });\n      req.__kadiraInfo = { trace };\n\n      res.on('finish', () => {\n        if (req.__kadiraInfo.asyncEvent) {\n          Kadira.tracer.eventEnd(trace, req.__kadiraInfo.asyncEvent);\n        }\n\n        Kadira.tracer.endLastEvent(trace);\n\n        if (req.__kadiraInfo.isStatic) {\n          trace.name = `${req.method}-<static file>`;\n        } else if (req.__kadiraInfo.suggestedRouteName) {\n          trace.name = `${req.method}-${req.__kadiraInfo.suggestedRouteName}`;\n        } else if (req.__kadiraInfo.isAppRoute) {\n          trace.name = `${req.method}-<app>`;\n        }\n\n        const isJson = req.headers['content-type'] === 'application/json';\n        const hasSmallBody = req.headers['content-length'] > 0 && req.headers['content-length'] < MAX_BODY_SIZE;\n\n        // Check after all middleware have run to see if any of them\n        // set req.body\n        // Technically bodies can be used with any method, but since many load balancers and\n        // other software only support bodies for POST requests, we are\n        // not recording the body for other methods.\n        if (req.method === 'POST' && req.body && isJson && hasSmallBody) {\n          try {\n            let body = JSON.stringify(req.body);\n\n            // Check the body size again in case it is much\n            // larger than what was in the content-length header\n            if (body.length < MAX_STRINGIFIED_BODY_SIZE) {\n              trace.events[0].data.body = body;\n            }\n          } catch (e) {\n          // It is okay if this fails\n          }\n        }\n\n        // TODO: record status code\n        Kadira.tracer.event(trace, 'complete');\n        let built = Kadira.tracer.buildTrace(trace);\n        Kadira.models.http.processRequest(built, req, res);\n      });\n\n      next();\n    }\n  });\n\n\n  function wrapHandler (handler) {\n    // connect identifies error handles by them accepting\n    // four arguments\n    let errorHandler = handler.length === 4;\n\n    function wrapper (req, res, next) {\n      let error;\n      if (errorHandler) {\n        error = req;\n        req = res;\n        res = next;\n        next = arguments[3];\n      }\n\n      const kadiraInfo = req.__kadiraInfo;\n      Kadira._setInfo(kadiraInfo);\n\n      let nextCalled = false;\n      // TODO: track errors passed to next or thrown\n      function wrappedNext (...args) {\n        if (kadiraInfo && kadiraInfo.asyncEvent) {\n          Kadira.tracer.eventEnd(req.__kadiraInfo.trace, req.__kadiraInfo.asyncEvent);\n          req.__kadiraInfo.asyncEvent = null;\n        }\n\n        nextCalled = true;\n        next(...args);\n      }\n\n      let potentialPromise;\n\n      if (errorHandler) {\n        potentialPromise = handler.call(this, error, req, res, wrappedNext);\n      } else {\n        potentialPromise = handler.call(this, req, res, wrappedNext);\n      }\n\n      if (potentialPromise && typeof potentialPromise.then === 'function') {\n        potentialPromise.then(() => {\n          // res.finished is depreciated in Node 13, but it is the only option\n          // for Node 12.9 and older.\n          if (kadiraInfo && !res.finished && !nextCalled) {\n            const lastEvent = Kadira.tracer.getLastEvent(kadiraInfo.trace);\n            if (lastEvent.endAt) {\n              // req is not done, and next has not been called\n              // create an async event that will end when either of those happens\n              kadiraInfo.asyncEvent = Kadira.tracer.event(kadiraInfo.trace, 'async');\n            }\n          }\n        });\n      }\n\n      return potentialPromise;\n    }\n\n    if (errorHandler) {\n      return function (error, req, res, next) {\n        return wrapper(error, req, res, next);\n      };\n    }\n    return function (req, res, next) {\n      return wrapper(req, res, next);\n    };\n  }\n\n  function wrapConnect (app, wrapStack) {\n    let oldUse = app.use;\n    if (wrapStack) {\n      // We need to set kadiraInfo on the Fiber the handler will run in.\n      // Meteor has already wrapped the handler to run it in a new Fiber\n      // by using Promise.asyncApply so we are not able to directly set it\n      // on that Fiber.\n      // Meteor's promise library copies properties from the current fiber to\n      // the new fiber, so we can wrap it in another Fiber with kadiraInfo set\n      // and Meteor will copy kadiraInfo to the new Fiber.\n      // It will only create the additional Fiber if it isn't already running in a Fiber\n      app.stack.forEach(entry => {\n        let wrappedHandler = wrapHandler(entry.handle);\n        if (entry.handle.length >= 4) {\n          // eslint-disable-next-line no-unused-vars,handle-callback-err\n          entry.handle = function (error, req, res, next) {\n            return Promise.asyncApply(\n              wrappedHandler,\n              this,\n              arguments,\n              true\n            );\n          };\n        } else {\n          // eslint-disable-next-line no-unused-vars\n          entry.handle = function (req, res, next) {\n            return Promise.asyncApply(\n              wrappedHandler,\n              this,\n              arguments,\n              true\n            );\n          };\n        }\n      });\n    }\n    app.use = function (...args) {\n      args[args.length - 1] = wrapHandler(args[args.length - 1]);\n      return oldUse.apply(app, args);\n    };\n  }\n\n  wrapConnect(WebApp.rawConnectHandlers, false);\n  wrapConnect(WebAppInternals.meteorInternalHandlers, false);\n\n  // The oauth package and other core packages might have already added their middleware,\n  // so we need to wrap the existing middleware\n  wrapConnect(WebApp.connectHandlers, true);\n\n  wrapConnect(WebApp.connectApp, false);\n\n  let oldStaticFilesMiddleware = WebAppInternals.staticFilesMiddleware;\n  const staticHandler = wrapHandler(oldStaticFilesMiddleware.bind(WebAppInternals, WebAppInternals.staticFilesByArch));\n  WebAppInternals.staticFilesMiddleware = function (_staticFiles, req, res, next) {\n    if (req.__kadiraInfo) {\n      req.__kadiraInfo.isStatic = true;\n    }\n\n    return staticHandler(req, res, function () {\n      // if the request is for a static file, the static handler will end the response\n      // instead of calling next\n      req.__kadiraInfo.isStatic = false;\n      return next.apply(this, arguments);\n    });\n  };\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"faf99c2c597ce603b77d8890453d0e97db1a7631"}
