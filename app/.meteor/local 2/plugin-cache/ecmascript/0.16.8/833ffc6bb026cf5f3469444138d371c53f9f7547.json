{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/ddp-rate-limiter/ddp-rate-limiter.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/ddp-rate-limiter/ddp-rate-limiter.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/ddp-rate-limiter/ddp-rate-limiter.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/ddp-rate-limiter/ddp-rate-limiter.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-rate-limiter/ddp-rate-limiter.js"}},"code":"module.export({\n  DDPRateLimiter: () => DDPRateLimiter\n});\nlet RateLimiter;\nmodule.link(\"meteor/rate-limit\", {\n  RateLimiter(v) {\n    RateLimiter = v;\n  }\n}, 0);\n// Rate Limiter built into DDP with a default error message. See README or\n// online documentation for more details.\nconst DDPRateLimiter = {};\nlet errorMessage = rateLimitResult => {\n  return 'Error, too many requests. Please slow down. You must wait ' + \"\".concat(Math.ceil(rateLimitResult.timeToReset / 1000), \" seconds before \") + 'trying again.';\n};\n\n// Store rule specific error messages.\nconst errorMessageByRule = new Map();\nconst rateLimiter = new RateLimiter();\nDDPRateLimiter.getErrorMessage = rateLimitResult => {\n  // If there is a specific error message for this rule, use it.\n  if (errorMessageByRule.has(rateLimitResult.ruleId)) {\n    const message = errorMessageByRule.get(rateLimitResult.ruleId);\n    // if it's a function, we need to call it\n    if (typeof message === 'function') {\n      // call the function with the rateLimitResult\n      return message(rateLimitResult);\n    }\n    // otherwise, just return the string\n    return message;\n  }\n\n  // Otherwise, use the default error message.\n  if (typeof errorMessage === 'function') {\n    return errorMessage(rateLimitResult);\n  }\n  return errorMessage;\n};\n\n/**\n * @summary Set error message text when method or subscription rate limit\n * exceeded.\n * @param {string|function} message Functions are passed in an object with a\n * `timeToReset` field that specifies the number of milliseconds until the next\n * method or subscription is allowed to run. The function must return a string\n * of the error message.\n * @locus Server\n */\nDDPRateLimiter.setErrorMessage = message => {\n  errorMessage = message;\n};\n\n/**\n * @summary Set error message text when method or subscription rate limit\n * exceeded for a specific rule.\n * @param {string} ruleId The ruleId returned from `addRule`\n * @param {string|function} message Functions are passed in an object with a\n * `timeToReset` field that specifies the number of milliseconds until the next\n * method or subscription is allowed to run. The function must return a string\n * of the error message.\n * @locus Server\n */\nDDPRateLimiter.setErrorMessageOnRule = (ruleId, message) => {\n  errorMessageByRule.set(ruleId, message);\n};\n\n/**\n * @summary\n * Add a rule that matches against a stream of events describing method or\n * subscription attempts. Each event is an object with the following\n * properties:\n *\n * - `type`: Either \"method\" or \"subscription\"\n * - `name`: The name of the method or subscription being called\n * - `userId`: The user ID attempting the method or subscription\n * - `connectionId`: A string representing the user's DDP connection\n * - `clientAddress`: The IP address of the user\n *\n * Returns unique `ruleId` that can be passed to `removeRule` and `setErrorMessageOnRule`\n *\n * @param {Object} matcher\n *   Matchers specify which events are counted towards a rate limit. A matcher\n *   is an object that has a subset of the same properties as the event objects\n *   described above. Each value in a matcher object is one of the following:\n *\n *   - a string: for the event to satisfy the matcher, this value must be equal\n *   to the value of the same property in the event object\n *\n *   - a function: for the event to satisfy the matcher, the function must\n *   evaluate to true when passed the value of the same property\n *   in the event object\n *\n * Here's how events are counted: Each event that satisfies the matcher's\n * filter is mapped to a bucket. Buckets are uniquely determined by the\n * event object's values for all properties present in both the matcher and\n * event objects.\n *\n * @param {number} numRequests  number of requests allowed per time interval.\n * Default = 10.\n * @param {number} timeInterval time interval in milliseconds after which\n * rule's counters are reset. Default = 1000.\n * @param {function} callback function to be called after a rule is executed.\n * @locus Server\n */\nDDPRateLimiter.addRule = (matcher, numRequests, timeInterval, callback) => rateLimiter.addRule(matcher, numRequests, timeInterval, callback);\nDDPRateLimiter.printRules = () => rateLimiter.rules;\n\n/**\n * @summary Removes the specified rule from the rate limiter. If rule had\n * hit a rate limit, that limit is removed as well.\n * @param  {string} id 'ruleId' returned from `addRule`\n * @return {boolean}    True if a rule was removed.\n * @locus Server\n */\nDDPRateLimiter.removeRule = id => rateLimiter.removeRule(id);\n\n// This is accessed inside livedata_server.js, but shouldn't be called by any\n// user.\nDDPRateLimiter._increment = input => {\n  rateLimiter.increment(input);\n};\nDDPRateLimiter._check = input => rateLimiter.check(input);","map":{"version":3,"names":["module","export","DDPRateLimiter","RateLimiter","link","v","errorMessage","rateLimitResult","concat","Math","ceil","timeToReset","errorMessageByRule","Map","rateLimiter","getErrorMessage","has","ruleId","message","get","setErrorMessage","setErrorMessageOnRule","set","addRule","matcher","numRequests","timeInterval","callback","printRules","rules","removeRule","id","_increment","input","increment","_check","check"],"sources":["packages/ddp-rate-limiter/ddp-rate-limiter.js"],"sourcesContent":["import { RateLimiter } from 'meteor/rate-limit';\n\n// Rate Limiter built into DDP with a default error message. See README or\n// online documentation for more details.\nconst DDPRateLimiter = {};\n\nlet errorMessage = (rateLimitResult) => {\n  return 'Error, too many requests. Please slow down. You must wait ' +\n    `${Math.ceil(rateLimitResult.timeToReset / 1000)} seconds before ` +\n    'trying again.';\n};\n\n// Store rule specific error messages.\nconst errorMessageByRule = new Map();\n\nconst rateLimiter = new RateLimiter();\n\nDDPRateLimiter.getErrorMessage = (rateLimitResult) => {\n  // If there is a specific error message for this rule, use it.\n  if (errorMessageByRule.has(rateLimitResult.ruleId)) {\n    const message = errorMessageByRule.get(rateLimitResult.ruleId);\n    // if it's a function, we need to call it\n    if (typeof message === 'function') {\n      // call the function with the rateLimitResult\n      return message(rateLimitResult);\n    }\n    // otherwise, just return the string\n    return message;\n }\n\n  // Otherwise, use the default error message.\n  if (typeof errorMessage === 'function') {\n    return errorMessage(rateLimitResult);\n  }\n  return errorMessage;\n};\n\n/**\n * @summary Set error message text when method or subscription rate limit\n * exceeded.\n * @param {string|function} message Functions are passed in an object with a\n * `timeToReset` field that specifies the number of milliseconds until the next\n * method or subscription is allowed to run. The function must return a string\n * of the error message.\n * @locus Server\n */\nDDPRateLimiter.setErrorMessage = (message) => {\n  errorMessage = message;\n};\n\n/**\n * @summary Set error message text when method or subscription rate limit\n * exceeded for a specific rule.\n * @param {string} ruleId The ruleId returned from `addRule`\n * @param {string|function} message Functions are passed in an object with a\n * `timeToReset` field that specifies the number of milliseconds until the next\n * method or subscription is allowed to run. The function must return a string\n * of the error message.\n * @locus Server\n */\nDDPRateLimiter.setErrorMessageOnRule = (ruleId, message) => {\n  errorMessageByRule.set(ruleId, message);\n};\n\n/**\n * @summary\n * Add a rule that matches against a stream of events describing method or\n * subscription attempts. Each event is an object with the following\n * properties:\n *\n * - `type`: Either \"method\" or \"subscription\"\n * - `name`: The name of the method or subscription being called\n * - `userId`: The user ID attempting the method or subscription\n * - `connectionId`: A string representing the user's DDP connection\n * - `clientAddress`: The IP address of the user\n *\n * Returns unique `ruleId` that can be passed to `removeRule` and `setErrorMessageOnRule`\n *\n * @param {Object} matcher\n *   Matchers specify which events are counted towards a rate limit. A matcher\n *   is an object that has a subset of the same properties as the event objects\n *   described above. Each value in a matcher object is one of the following:\n *\n *   - a string: for the event to satisfy the matcher, this value must be equal\n *   to the value of the same property in the event object\n *\n *   - a function: for the event to satisfy the matcher, the function must\n *   evaluate to true when passed the value of the same property\n *   in the event object\n *\n * Here's how events are counted: Each event that satisfies the matcher's\n * filter is mapped to a bucket. Buckets are uniquely determined by the\n * event object's values for all properties present in both the matcher and\n * event objects.\n *\n * @param {number} numRequests  number of requests allowed per time interval.\n * Default = 10.\n * @param {number} timeInterval time interval in milliseconds after which\n * rule's counters are reset. Default = 1000.\n * @param {function} callback function to be called after a rule is executed.\n * @locus Server\n */\nDDPRateLimiter.addRule = (matcher, numRequests, timeInterval, callback) => \n  rateLimiter.addRule(matcher, numRequests, timeInterval, callback);\n\nDDPRateLimiter.printRules = () => rateLimiter.rules;\n\n/**\n * @summary Removes the specified rule from the rate limiter. If rule had\n * hit a rate limit, that limit is removed as well.\n * @param  {string} id 'ruleId' returned from `addRule`\n * @return {boolean}    True if a rule was removed.\n * @locus Server\n */\nDDPRateLimiter.removeRule = id => rateLimiter.removeRule(id);\n\n// This is accessed inside livedata_server.js, but shouldn't be called by any\n// user.\nDDPRateLimiter._increment = (input) => {\n  rateLimiter.increment(input);\n};\n\nDDPRateLimiter._check = input => rateLimiter.check(input);\n\nexport { DDPRateLimiter };\n"],"mappings":"AAAAA,MAAM,CAACC,MAAM,CAAC;EAACC,cAAc,EAACA,CAAA,KAAIA;AAAc,CAAC,CAAC;AAAC,IAAIC,WAAW;AAACH,MAAM,CAACI,IAAI,CAAC,mBAAmB,EAAC;EAACD,WAAWA,CAACE,CAAC,EAAC;IAACF,WAAW,GAACE,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAErI;AACA;AACA,MAAMH,cAAc,GAAG,CAAC,CAAC;AAEzB,IAAII,YAAY,GAAIC,eAAe,IAAK;EACtC,OAAO,4DAA4D,MAAAC,MAAA,CAC9DC,IAAI,CAACC,IAAI,CAACH,eAAe,CAACI,WAAW,GAAG,IAAI,CAAC,qBAAkB,GAClE,eAAe;AACnB,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEpC,MAAMC,WAAW,GAAG,IAAIX,WAAW,CAAC,CAAC;AAErCD,cAAc,CAACa,eAAe,GAAIR,eAAe,IAAK;EACpD;EACA,IAAIK,kBAAkB,CAACI,GAAG,CAACT,eAAe,CAACU,MAAM,CAAC,EAAE;IAClD,MAAMC,OAAO,GAAGN,kBAAkB,CAACO,GAAG,CAACZ,eAAe,CAACU,MAAM,CAAC;IAC9D;IACA,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE;MACjC;MACA,OAAOA,OAAO,CAACX,eAAe,CAAC;IACjC;IACA;IACA,OAAOW,OAAO;EACjB;;EAEC;EACA,IAAI,OAAOZ,YAAY,KAAK,UAAU,EAAE;IACtC,OAAOA,YAAY,CAACC,eAAe,CAAC;EACtC;EACA,OAAOD,YAAY;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,cAAc,CAACkB,eAAe,GAAIF,OAAO,IAAK;EAC5CZ,YAAY,GAAGY,OAAO;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhB,cAAc,CAACmB,qBAAqB,GAAG,CAACJ,MAAM,EAAEC,OAAO,KAAK;EAC1DN,kBAAkB,CAACU,GAAG,CAACL,MAAM,EAAEC,OAAO,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhB,cAAc,CAACqB,OAAO,GAAG,CAACC,OAAO,EAAEC,WAAW,EAAEC,YAAY,EAAEC,QAAQ,KACpEb,WAAW,CAACS,OAAO,CAACC,OAAO,EAAEC,WAAW,EAAEC,YAAY,EAAEC,QAAQ,CAAC;AAEnEzB,cAAc,CAAC0B,UAAU,GAAG,MAAMd,WAAW,CAACe,KAAK;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA3B,cAAc,CAAC4B,UAAU,GAAGC,EAAE,IAAIjB,WAAW,CAACgB,UAAU,CAACC,EAAE,CAAC;;AAE5D;AACA;AACA7B,cAAc,CAAC8B,UAAU,GAAIC,KAAK,IAAK;EACrCnB,WAAW,CAACoB,SAAS,CAACD,KAAK,CAAC;AAC9B,CAAC;AAED/B,cAAc,CAACiC,MAAM,GAAGF,KAAK,IAAInB,WAAW,CAACsB,KAAK,CAACH,KAAK,CAAC"},"sourceType":"module","externalDependencies":{},"hash":"833ffc6bb026cf5f3469444138d371c53f9f7547"}
