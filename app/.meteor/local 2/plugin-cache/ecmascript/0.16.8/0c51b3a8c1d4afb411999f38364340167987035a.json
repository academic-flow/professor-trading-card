{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/sourcemaps.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/sourcemaps.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/sourcemaps.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/sourcemaps.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/sourcemaps.js"}},"code":"module.export({\n  handleApiResponse: () => handleApiResponse\n});\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n}, 0);\nlet path = Npm.require('path');\nlet fs = Npm.require('fs');\nlet logger = Npm.require('debug')('kadira:apm:sourcemaps');\n\n// Meteor 1.7 and older used clientPaths\nlet clientPaths = __meteor_bootstrap__.configJson.clientPaths;\nlet clientArchs = __meteor_bootstrap__.configJson.clientArchs;\nlet serverDir = __meteor_bootstrap__.serverDir;\nlet absClientPaths;\nif (clientArchs) {\n  absClientPaths = clientArchs.reduce((result, arch) => {\n    result[arch] = path.resolve(path.dirname(serverDir), arch);\n    return result;\n  }, {});\n} else {\n  absClientPaths = Object.keys(clientPaths).reduce((result, key) => {\n    result[key] = path.resolve(serverDir, path.dirname(clientPaths[key]));\n    return result;\n  }, {});\n}\nfunction handleApiResponse() {\n  let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let unavailable = [];\n  if (typeof body === 'string') {\n    try {\n      body = JSON.parse(body);\n    } catch (e) {\n      logger('failed parsing body', e, body);\n      return;\n    }\n  }\n  let neededSourcemaps = body.neededSourcemaps || [];\n  logger('body', neededSourcemaps);\n  let promises = neededSourcemaps.map(sourcemap => {\n    if (!Kadira.options.uploadSourceMaps) {\n      return unavailable.push(sourcemap);\n    }\n    return getSourcemapPath(sourcemap.arch, sourcemap.file.path).then(function (sourceMapPath) {\n      if (sourceMapPath === null) {\n        unavailable.push(sourcemap);\n      } else {\n        sendSourcemap(sourcemap, sourceMapPath);\n      }\n    });\n  });\n  Promise.all(promises).then(function () {\n    if (unavailable.length > 0) {\n      logger('sending unavailable sourcemaps', unavailable);\n      Kadira.coreApi.sendData({\n        unavailableSourcemaps: unavailable\n      }).then(function (_body) {\n        handleApiResponse(_body);\n      }).catch(function (err) {\n        console.log('Monti APM: unable to send data', err);\n      });\n    }\n  });\n}\nfunction sendSourcemap(sourcemap, sourcemapPath) {\n  logger('Sending sourcemap', sourcemap, sourcemapPath);\n  let stream = fs.createReadStream(sourcemapPath);\n  stream.on('error', err => {\n    console.log('Monti APM: error while uploading sourcemap', err);\n  });\n  let arch = sourcemap.arch;\n  let archVersion = sourcemap.archVersion;\n  let file = encodeURIComponent(sourcemap.file.path);\n  Kadira.coreApi.sendStream(\"/sourcemap?arch=\".concat(arch, \"&archVersion=\").concat(archVersion, \"&file=\").concat(file), stream).catch(function (err) {\n    console.log('Monti APM: error uploading sourcemap', err);\n  });\n}\nfunction preparePath(urlPath) {\n  urlPath = path.posix.normalize(urlPath);\n  if (urlPath[0] === '/') {\n    urlPath = urlPath.slice(1);\n  }\n  return urlPath;\n}\nfunction checkForDynamicImport(arch, urlPath) {\n  const filePath = preparePath(urlPath);\n  return new Promise(function (resolve) {\n    const archPath = absClientPaths[arch];\n    const dynamicPath = \"\".concat(path.join(archPath, 'dynamic', filePath), \".map\");\n    fs.stat(dynamicPath, function (err) {\n      resolve(err ? null : dynamicPath);\n    });\n  });\n}\nfunction getSourcemapPath(arch, urlPath) {\n  return new Promise((resolve, reject) => {\n    let clientProgram = WebApp.clientPrograms[arch];\n    if (!clientProgram || !clientProgram.manifest) {\n      return resolve(null);\n    }\n    let fileInfo = clientProgram.manifest.find(file => file.url && file.url.startsWith(urlPath));\n    if (fileInfo && fileInfo.sourceMap) {\n      return resolve(path.join(absClientPaths[arch], fileInfo.sourceMap));\n    }\n    checkForDynamicImport(arch, urlPath).then(resolve).catch(reject);\n  });\n}","map":{"version":3,"names":["module","export","handleApiResponse","WebApp","link","v","path","Npm","require","fs","logger","clientPaths","__meteor_bootstrap__","configJson","clientArchs","serverDir","absClientPaths","reduce","result","arch","resolve","dirname","Object","keys","key","body","arguments","length","undefined","unavailable","JSON","parse","e","neededSourcemaps","promises","map","sourcemap","Kadira","options","uploadSourceMaps","push","getSourcemapPath","file","then","sourceMapPath","sendSourcemap","Promise","all","coreApi","sendData","unavailableSourcemaps","_body","catch","err","console","log","sourcemapPath","stream","createReadStream","on","archVersion","encodeURIComponent","sendStream","concat","preparePath","urlPath","posix","normalize","slice","checkForDynamicImport","filePath","archPath","dynamicPath","join","stat","reject","clientProgram","clientPrograms","manifest","fileInfo","find","url","startsWith","sourceMap"],"sources":["packages/montiapm:agent/lib/sourcemaps.js"],"sourcesContent":["import { WebApp } from 'meteor/webapp';\nlet path = Npm.require('path');\nlet fs = Npm.require('fs');\nlet logger = Npm.require('debug')('kadira:apm:sourcemaps');\n\n// Meteor 1.7 and older used clientPaths\nlet clientPaths = __meteor_bootstrap__.configJson.clientPaths;\nlet clientArchs = __meteor_bootstrap__.configJson.clientArchs;\nlet serverDir = __meteor_bootstrap__.serverDir;\nlet absClientPaths;\n\nif (clientArchs) {\n  absClientPaths = clientArchs.reduce((result, arch) => {\n    result[arch] = path.resolve(path.dirname(serverDir), arch);\n\n    return result;\n  }, {});\n} else {\n  absClientPaths = Object.keys(clientPaths).reduce((result, key) => {\n    result[key] = path.resolve(serverDir, path.dirname(clientPaths[key]));\n\n    return result;\n  }, {});\n}\n\nexport function handleApiResponse (body = {}) {\n  let unavailable = [];\n\n  if (typeof body === 'string') {\n    try {\n      body = JSON.parse(body);\n    } catch (e) {\n      logger('failed parsing body', e, body);\n      return;\n    }\n  }\n\n  let neededSourcemaps = body.neededSourcemaps || [];\n  logger('body', neededSourcemaps);\n\n  let promises = neededSourcemaps.map((sourcemap) => {\n    if (!Kadira.options.uploadSourceMaps) {\n      return unavailable.push(sourcemap);\n    }\n\n    return getSourcemapPath(sourcemap.arch, sourcemap.file.path)\n      .then(function (sourceMapPath) {\n        if (sourceMapPath === null) {\n          unavailable.push(sourcemap);\n        } else {\n          sendSourcemap(sourcemap, sourceMapPath);\n        }\n      });\n  });\n\n  Promise.all(promises).then(function () {\n    if (unavailable.length > 0) {\n      logger('sending unavailable sourcemaps', unavailable);\n      Kadira.coreApi.sendData({\n        unavailableSourcemaps: unavailable\n      })\n        .then(function (_body) {\n          handleApiResponse(_body);\n        })\n        .catch(function (err) {\n          console.log('Monti APM: unable to send data', err);\n        });\n    }\n  });\n}\n\nfunction sendSourcemap (sourcemap, sourcemapPath) {\n  logger('Sending sourcemap', sourcemap, sourcemapPath);\n\n  let stream = fs.createReadStream(sourcemapPath);\n\n  stream.on('error', (err) => {\n    console.log('Monti APM: error while uploading sourcemap', err);\n  });\n\n  let arch = sourcemap.arch;\n  let archVersion = sourcemap.archVersion;\n  let file = encodeURIComponent(sourcemap.file.path);\n\n  Kadira.coreApi.sendStream(`/sourcemap?arch=${arch}&archVersion=${archVersion}&file=${file}`, stream)\n    .catch(function (err) {\n      console.log('Monti APM: error uploading sourcemap', err);\n    });\n}\n\nfunction preparePath (urlPath) {\n  urlPath = path.posix.normalize(urlPath);\n\n  if (urlPath[0] === '/') {\n    urlPath = urlPath.slice(1);\n  }\n\n  return urlPath;\n}\n\nfunction checkForDynamicImport (arch, urlPath) {\n  const filePath = preparePath(urlPath);\n\n  return new Promise(function (resolve) {\n    const archPath = absClientPaths[arch];\n    const dynamicPath = `${path.join(archPath, 'dynamic', filePath)}.map`;\n\n    fs.stat(dynamicPath, function (err) {\n      resolve(err ? null : dynamicPath);\n    });\n  });\n}\n\nfunction getSourcemapPath (arch, urlPath) {\n  return new Promise((resolve, reject) => {\n    let clientProgram = WebApp.clientPrograms[arch];\n\n    if (!clientProgram || !clientProgram.manifest) {\n      return resolve(null);\n    }\n\n    let fileInfo = clientProgram.manifest.find((file) => file.url && file.url.startsWith(urlPath));\n\n    if (fileInfo && fileInfo.sourceMap) {\n      return resolve(path.join(\n        absClientPaths[arch],\n        fileInfo.sourceMap\n      ));\n    }\n\n    checkForDynamicImport(arch, urlPath).then(resolve).catch(reject);\n  });\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"0c51b3a8c1d4afb411999f38364340167987035a"}
