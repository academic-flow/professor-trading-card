{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/tracer/tracer_store.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/tracer/tracer_store.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/tracer/tracer_store.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/tracer/tracer_store.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/tracer/tracer_store.js"}},"code":"module.export({\n  TracerStore: () => TracerStore\n});\nlet _;\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n}, 0);\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n}, 1);\nlet logger = Npm.require('debug')('kadira:ts');\nfunction TracerStore(options) {\n  options = options || {};\n  this.maxTotalPoints = options.maxTotalPoints || 30;\n  this.interval = options.interval || 1000 * 60;\n  this.archiveEvery = options.archiveEvery || this.maxTotalPoints / 6;\n\n  // store max total on the past 30 minutes (or past 30 items)\n  this.maxTotals = Object.create(null);\n  // store the max trace of the current interval\n  this.currentMaxTrace = Object.create(null);\n  // archive for the traces\n  this.traceArchive = [];\n  this.processedCnt = Object.create(null);\n\n  // group errors by messages between an interval\n  this.errorMap = Object.create(null);\n}\nTracerStore.prototype.addTrace = function (trace) {\n  let kind = [trace.type, trace.name].join('::');\n  if (!this.currentMaxTrace[kind]) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (this.currentMaxTrace[kind].metrics.total < trace.metrics.total) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (trace.errored) {\n    this._handleErrors(trace);\n  }\n};\nTracerStore.prototype.collectTraces = function () {\n  let traces = this.traceArchive;\n  this.traceArchive = [];\n\n  // convert at(timestamp) into the actual serverTime\n  traces.forEach(function (trace) {\n    trace.at = Kadira.syncedDate.syncTime(trace.at);\n  });\n  return traces;\n};\nTracerStore.prototype.start = function () {\n  this._timeoutHandler = setInterval(this.processTraces.bind(this), this.interval);\n};\nTracerStore.prototype.stop = function () {\n  if (this._timeoutHandler) {\n    clearInterval(this._timeoutHandler);\n  }\n};\nTracerStore.prototype._handleErrors = function (trace) {\n  // sending error requests as it is\n  let lastEvent = trace.events[trace.events.length - 1];\n  if (lastEvent && lastEvent[2]) {\n    let error = lastEvent[2].error;\n\n    // grouping errors occured (reset after processTraces)\n    let errorKey = [trace.type, trace.name, error.message].join('::');\n    if (!this.errorMap[errorKey]) {\n      let erroredTrace = EJSON.clone(trace);\n      this.errorMap[errorKey] = erroredTrace;\n      this.traceArchive.push(erroredTrace);\n    }\n  } else {\n    logger('last events is not an error: ', JSON.stringify(trace.events));\n  }\n};\nTracerStore.prototype.processTraces = function () {\n  let self = this;\n  let kinds = new Set();\n  Object.keys(this.maxTotals).forEach(key => {\n    kinds.add(key);\n  });\n  Object.keys(this.currentMaxTrace).forEach(key => {\n    kinds.add(key);\n  });\n  for (const kind of kinds) {\n    self.processedCnt[kind] = self.processedCnt[kind] || 0;\n    let currentMaxTrace = self.currentMaxTrace[kind];\n    let currentMaxTotal = currentMaxTrace ? currentMaxTrace.metrics.total : 0;\n    self.maxTotals[kind] = self.maxTotals[kind] || [];\n    // add the current maxPoint\n    self.maxTotals[kind].push(currentMaxTotal);\n    let exceedingPoints = self.maxTotals[kind].length - self.maxTotalPoints;\n    if (exceedingPoints > 0) {\n      self.maxTotals[kind].splice(0, exceedingPoints);\n    }\n    let archiveDefault = self.processedCnt[kind] % self.archiveEvery === 0;\n    self.processedCnt[kind]++;\n    let canArchive = archiveDefault || self._isTraceOutlier(kind, currentMaxTrace);\n    if (canArchive && currentMaxTrace) {\n      self.traceArchive.push(currentMaxTrace);\n    }\n\n    // reset currentMaxTrace\n    self.currentMaxTrace[kind] = null;\n  }\n\n  // reset the errorMap\n  self.errorMap = Object.create(null);\n};\nTracerStore.prototype._isTraceOutlier = function (kind, trace) {\n  if (trace) {\n    let dataSet = this.maxTotals[kind];\n    return this._isOutlier(dataSet, trace.metrics.total, 3);\n  }\n  return false;\n};\n\n/*\n  Data point must exists in the dataSet\n*/\nTracerStore.prototype._isOutlier = function (dataSet, dataPoint, maxMadZ) {\n  let median = this._getMedian(dataSet);\n  let mad = this._calculateMad(dataSet, median);\n  let madZ = this._funcMedianDeviation(median)(dataPoint) / mad;\n  return madZ > maxMadZ;\n};\nTracerStore.prototype._getMedian = function (dataSet) {\n  let sortedDataSet = _.clone(dataSet).sort(function (a, b) {\n    return a - b;\n  });\n  return this._pickQuartile(sortedDataSet, 2);\n};\nTracerStore.prototype._pickQuartile = function (dataSet, num) {\n  let pos = (dataSet.length + 1) * num / 4;\n  if (pos % 1 === 0) {\n    return dataSet[pos - 1];\n  }\n  pos -= pos % 1;\n  return (dataSet[pos - 1] + dataSet[pos]) / 2;\n};\nTracerStore.prototype._calculateMad = function (dataSet, median) {\n  let medianDeviations = _.map(dataSet, this._funcMedianDeviation(median));\n  let mad = this._getMedian(medianDeviations);\n  return mad;\n};\nTracerStore.prototype._funcMedianDeviation = function (median) {\n  return function (x) {\n    return Math.abs(median - x);\n  };\n};\nTracerStore.prototype._getMean = function (dataPoints) {\n  if (dataPoints.length > 0) {\n    let total = 0;\n    dataPoints.forEach(function (point) {\n      total += point;\n    });\n    return total / dataPoints.length;\n  }\n  return 0;\n};","map":{"version":3,"names":["module","export","TracerStore","_","link","v","EJSON","logger","Npm","require","options","maxTotalPoints","interval","archiveEvery","maxTotals","Object","create","currentMaxTrace","traceArchive","processedCnt","errorMap","prototype","addTrace","trace","kind","type","name","join","clone","metrics","total","errored","_handleErrors","collectTraces","traces","forEach","at","Kadira","syncedDate","syncTime","start","_timeoutHandler","setInterval","processTraces","bind","stop","clearInterval","lastEvent","events","length","error","errorKey","message","erroredTrace","push","JSON","stringify","self","kinds","Set","keys","key","add","currentMaxTotal","exceedingPoints","splice","archiveDefault","canArchive","_isTraceOutlier","dataSet","_isOutlier","dataPoint","maxMadZ","median","_getMedian","mad","_calculateMad","madZ","_funcMedianDeviation","sortedDataSet","sort","a","b","_pickQuartile","num","pos","medianDeviations","map","x","Math","abs","_getMean","dataPoints","point"],"sources":["packages/montiapm:agent/lib/tracer/tracer_store.js"],"sourcesContent":["import { _ } from 'meteor/underscore';\nimport { EJSON } from 'meteor/ejson';\nlet logger = Npm.require('debug')('kadira:ts');\n\nexport function TracerStore (options) {\n  options = options || {};\n\n  this.maxTotalPoints = options.maxTotalPoints || 30;\n  this.interval = options.interval || 1000 * 60;\n  this.archiveEvery = options.archiveEvery || this.maxTotalPoints / 6;\n\n  // store max total on the past 30 minutes (or past 30 items)\n  this.maxTotals = Object.create(null);\n  // store the max trace of the current interval\n  this.currentMaxTrace = Object.create(null);\n  // archive for the traces\n  this.traceArchive = [];\n\n  this.processedCnt = Object.create(null);\n\n  // group errors by messages between an interval\n  this.errorMap = Object.create(null);\n}\n\nTracerStore.prototype.addTrace = function (trace) {\n  let kind = [trace.type, trace.name].join('::');\n  if (!this.currentMaxTrace[kind]) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (this.currentMaxTrace[kind].metrics.total < trace.metrics.total) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (trace.errored) {\n    this._handleErrors(trace);\n  }\n};\n\nTracerStore.prototype.collectTraces = function () {\n  let traces = this.traceArchive;\n  this.traceArchive = [];\n\n  // convert at(timestamp) into the actual serverTime\n  traces.forEach(function (trace) {\n    trace.at = Kadira.syncedDate.syncTime(trace.at);\n  });\n  return traces;\n};\n\nTracerStore.prototype.start = function () {\n  this._timeoutHandler = setInterval(this.processTraces.bind(this), this.interval);\n};\n\nTracerStore.prototype.stop = function () {\n  if (this._timeoutHandler) {\n    clearInterval(this._timeoutHandler);\n  }\n};\n\nTracerStore.prototype._handleErrors = function (trace) {\n  // sending error requests as it is\n  let lastEvent = trace.events[trace.events.length - 1];\n  if (lastEvent && lastEvent[2]) {\n    let error = lastEvent[2].error;\n\n    // grouping errors occured (reset after processTraces)\n    let errorKey = [trace.type, trace.name, error.message].join('::');\n    if (!this.errorMap[errorKey]) {\n      let erroredTrace = EJSON.clone(trace);\n      this.errorMap[errorKey] = erroredTrace;\n\n      this.traceArchive.push(erroredTrace);\n    }\n  } else {\n    logger('last events is not an error: ', JSON.stringify(trace.events));\n  }\n};\n\nTracerStore.prototype.processTraces = function () {\n  let self = this;\n\n  let kinds = new Set();\n  Object.keys(this.maxTotals).forEach(key => {\n    kinds.add(key);\n  });\n  Object.keys(this.currentMaxTrace).forEach(key => {\n    kinds.add(key);\n  });\n\n  for (const kind of kinds) {\n    self.processedCnt[kind] = self.processedCnt[kind] || 0;\n    let currentMaxTrace = self.currentMaxTrace[kind];\n    let currentMaxTotal = currentMaxTrace ? currentMaxTrace.metrics.total : 0;\n\n    self.maxTotals[kind] = self.maxTotals[kind] || [];\n    // add the current maxPoint\n    self.maxTotals[kind].push(currentMaxTotal);\n    let exceedingPoints = self.maxTotals[kind].length - self.maxTotalPoints;\n    if (exceedingPoints > 0) {\n      self.maxTotals[kind].splice(0, exceedingPoints);\n    }\n\n    let archiveDefault = (self.processedCnt[kind] % self.archiveEvery) === 0;\n    self.processedCnt[kind]++;\n\n    let canArchive = archiveDefault ||\n      self._isTraceOutlier(kind, currentMaxTrace);\n\n    if (canArchive && currentMaxTrace) {\n      self.traceArchive.push(currentMaxTrace);\n    }\n\n    // reset currentMaxTrace\n    self.currentMaxTrace[kind] = null;\n  }\n\n  // reset the errorMap\n  self.errorMap = Object.create(null);\n};\n\nTracerStore.prototype._isTraceOutlier = function (kind, trace) {\n  if (trace) {\n    let dataSet = this.maxTotals[kind];\n    return this._isOutlier(dataSet, trace.metrics.total, 3);\n  }\n  return false;\n};\n\n/*\n  Data point must exists in the dataSet\n*/\nTracerStore.prototype._isOutlier = function (dataSet, dataPoint, maxMadZ) {\n  let median = this._getMedian(dataSet);\n  let mad = this._calculateMad(dataSet, median);\n  let madZ = this._funcMedianDeviation(median)(dataPoint) / mad;\n\n  return madZ > maxMadZ;\n};\n\nTracerStore.prototype._getMedian = function (dataSet) {\n  let sortedDataSet = _.clone(dataSet).sort(function (a, b) {\n    return a - b;\n  });\n  return this._pickQuartile(sortedDataSet, 2);\n};\n\nTracerStore.prototype._pickQuartile = function (dataSet, num) {\n  let pos = ((dataSet.length + 1) * num) / 4;\n  if (pos % 1 === 0) {\n    return dataSet[pos - 1];\n  }\n  pos -= pos % 1;\n  return (dataSet[pos - 1] + dataSet[pos]) / 2;\n};\n\nTracerStore.prototype._calculateMad = function (dataSet, median) {\n  let medianDeviations = _.map(dataSet, this._funcMedianDeviation(median));\n  let mad = this._getMedian(medianDeviations);\n\n  return mad;\n};\n\nTracerStore.prototype._funcMedianDeviation = function (median) {\n  return function (x) {\n    return Math.abs(median - x);\n  };\n};\n\nTracerStore.prototype._getMean = function (dataPoints) {\n  if (dataPoints.length > 0) {\n    let total = 0;\n    dataPoints.forEach(function (point) {\n      total += point;\n    });\n    return total / dataPoints.length;\n  }\n  return 0;\n};\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"0d9242667da4edff0058d1c9472881375bd11f6b"}
