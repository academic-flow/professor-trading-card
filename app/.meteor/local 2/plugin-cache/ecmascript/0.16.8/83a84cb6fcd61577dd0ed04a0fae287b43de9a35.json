{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/db.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/hijack/db.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/db.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/packages/montiapm:agent/lib/hijack/db.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/hijack/db.js"}},"code":"module.export({\n  hijackDBOps: () => hijackDBOps\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n}, 1);\nlet Mongo, MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  },\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n}, 2);\nlet _;\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n}, 3);\nlet haveAsyncCallback, OptimizedApply;\nmodule.link(\"../utils\", {\n  haveAsyncCallback(v) {\n    haveAsyncCallback = v;\n  },\n  OptimizedApply(v) {\n    OptimizedApply = v;\n  }\n}, 4);\n// This hijack is important to make sure, collections created before\n// we hijack dbOps, even gets tracked.\n//  Meteor does not simply expose MongoConnection object to the client\n//  It picks methods which are necessary and make a binded object and\n//  assigned to the Mongo.Collection\n//  so, even we updated prototype, we can't track those collections\n//  but, this will fix it.\n\nlet originalOpen = MongoInternals.RemoteCollectionDriver.prototype.open;\nMongoInternals.RemoteCollectionDriver.prototype.open = function open(name) {\n  let self = this;\n  let ret = originalOpen.call(self, name);\n  _.each(ret, function (fn, m) {\n    // make sure, it's in the actual mongo connection object\n    // meteorhacks:mongo-collection-utils package add some arbitary methods\n    // which does not exist in the mongo connection\n    if (self.mongo[m]) {\n      ret[m] = function () {\n        Array.prototype.unshift.call(arguments, name);\n        return OptimizedApply(self.mongo, self.mongo[m], arguments);\n      };\n    }\n  });\n  return ret;\n};\n\n// TODO: this should be added to Meteorx\nfunction getSyncronousCursor() {\n  const MongoColl = typeof Mongo !== 'undefined' ? Mongo.Collection : Meteor.Collection;\n  const coll = new MongoColl(\"__dummy_coll_\".concat(Random.id()));\n  // we need to wait until the db is connected with meteor. findOne does that\n  coll.findOne();\n  const cursor = coll.find();\n  cursor.fetch();\n  return cursor._synchronousCursor.constructor;\n}\nfunction hijackDBOps() {\n  let mongoConnectionProto = MeteorX.MongoConnection.prototype;\n  // findOne is handled by find - so no need to track it\n  // upsert is handles by update\n  // 2.4 replaced _ensureIndex with createIndex\n  ['find', 'update', 'remove', 'insert', '_ensureIndex', '_dropIndex', 'createIndex'].forEach(function (func) {\n    let originalFunc = mongoConnectionProto[func];\n    if (!originalFunc) {\n      return;\n    }\n    mongoConnectionProto[func] = function (collName, selector, mod, options) {\n      let payload = {\n        coll: collName,\n        func\n      };\n      if (func === 'insert') {\n        // add nothing more to the payload\n      } else if (func === '_ensureIndex' || func === '_dropIndex' || func === 'createIndex') {\n        // add index\n        payload.index = JSON.stringify(selector);\n      } else if (func === 'update' && options && options.upsert) {\n        payload.func = 'upsert';\n        payload.selector = JSON.stringify(selector);\n      } else {\n        // all the other functions have selectors\n        payload.selector = JSON.stringify(selector);\n      }\n      let kadiraInfo = Kadira._getInfo();\n      let eventId;\n      if (kadiraInfo) {\n        eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      }\n\n      // this cause V8 to avoid any performance optimizations, but this is must use\n      // otherwise, if the error adds try catch block our logs get messy and didn't work\n      // see: issue #6\n\n      let ret;\n      try {\n        ret = originalFunc.apply(this, arguments);\n        // handling functions which can be triggered with an asyncCallback\n        let endOptions = {};\n        if (haveAsyncCallback(arguments)) {\n          endOptions.async = true;\n        }\n        if (func === 'update') {\n          // upsert only returns an object when called `upsert` directly\n          // otherwise it only act an update command\n          if (options && options.upsert && typeof ret === 'object') {\n            endOptions.updatedDocs = ret.numberAffected;\n            endOptions.insertedId = ret.insertedId;\n          } else {\n            endOptions.updatedDocs = ret;\n          }\n        } else if (func === 'remove') {\n          endOptions.removedDocs = ret;\n        }\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n        }\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n            err: ex.message\n          });\n        }\n        throw ex;\n      }\n      return ret;\n    };\n  });\n  let cursorProto = MeteorX.MongoCursor.prototype;\n  ['forEach', 'map', 'fetch', 'count', 'observeChanges', 'observe'].forEach(function (type) {\n    let originalFunc = cursorProto[type];\n    cursorProto[type] = function () {\n      let cursorDescription = this._cursorDescription;\n      let payload = Object.assign(Object.create(null), {\n        coll: cursorDescription.collectionName,\n        selector: JSON.stringify(cursorDescription.selector),\n        func: type,\n        cursor: true\n      });\n      if (cursorDescription.options) {\n        let cursorOptions = _.pick(cursorDescription.options, ['fields', 'projection', 'sort', 'limit']);\n        for (let field in cursorOptions) {\n          let value = cursorOptions[field];\n          if (typeof value === 'object') {\n            value = JSON.stringify(value);\n          }\n          payload[field] = value;\n        }\n      }\n      let kadiraInfo = Kadira._getInfo();\n      let previousTrackNextObject;\n      let eventId;\n      if (kadiraInfo) {\n        eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n        previousTrackNextObject = kadiraInfo.trackNextObject;\n        if (type === 'forEach' || type === 'map') {\n          kadiraInfo.trackNextObject = true;\n        }\n      }\n      try {\n        let ret = originalFunc.apply(this, arguments);\n        let endData = {};\n        if (type === 'observeChanges' || type === 'observe') {\n          let observerDriver;\n          endData.oplog = false;\n          // get data written by the multiplexer\n          endData.wasMultiplexerReady = ret._wasMultiplexerReady;\n          endData.queueLength = ret._queueLength;\n          endData.elapsedPollingTime = ret._elapsedPollingTime;\n          if (ret._multiplexer) {\n            // older meteor versions done not have an _multiplexer value\n            observerDriver = ret._multiplexer._observeDriver;\n            if (observerDriver) {\n              observerDriver = ret._multiplexer._observeDriver;\n              let observerDriverClass = observerDriver.constructor;\n              endData.oplog = typeof observerDriverClass.cursorSupported === 'function';\n              let size = 0;\n              ret._multiplexer._cache.docs.forEach(function () {\n                size++;\n              });\n              endData.noOfCachedDocs = size;\n\n              // if multiplexerWasNotReady, we need to get the time spend for the polling\n              if (!ret._wasMultiplexerReady) {\n                endData.initialPollingTime = observerDriver._lastPollTime;\n              }\n            }\n          }\n          if (!endData.oplog) {\n            // let's try to find the reason\n            let reasonInfo = Kadira.checkWhyNoOplog(cursorDescription, observerDriver);\n            endData.noOplogCode = reasonInfo.code;\n            endData.noOplogReason = reasonInfo.reason;\n            endData.noOplogSolution = reasonInfo.solution;\n          }\n        } else if (type === 'fetch' || type === 'map') {\n          // for other cursor operation\n\n          endData.docsFetched = ret.length;\n          if (type === 'fetch') {\n            let coll = cursorDescription.collectionName;\n            let query = cursorDescription.selector;\n            let opts = cursorDescription.options;\n            let docSize = Kadira.docSzCache.getSize(coll, query, opts, ret) * ret.length;\n            endData.docSize = docSize;\n            if (kadiraInfo) {\n              if (kadiraInfo.trace.type === 'method') {\n                Kadira.models.methods.trackDocSize(kadiraInfo.trace.name, docSize);\n              } else if (kadiraInfo.trace.type === 'sub') {\n                Kadira.models.pubsub.trackDocSize(kadiraInfo.trace.name, 'cursorFetches', docSize);\n              }\n              kadiraInfo.trackNextObject = previousTrackNextObject;\n            } else {\n              // Fetch with no kadira info are tracked as from a null method\n              Kadira.models.methods.trackDocSize('<not-a-method-or-a-pub>', docSize);\n            }\n\n            // TODO: Add doc size tracking to `map` as well.\n          }\n        }\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endData);\n        }\n        return ret;\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n            err: ex.message\n          });\n        }\n        throw ex;\n      }\n    };\n  });\n  const SyncronousCursor = getSyncronousCursor();\n  let origNextObject = SyncronousCursor.prototype._nextObject;\n  SyncronousCursor.prototype._nextObject = function () {\n    let kadiraInfo = Kadira._getInfo();\n    let shouldTrack = kadiraInfo && kadiraInfo.trackNextObject;\n    let event;\n    if (shouldTrack) {\n      event = Kadira.tracer.event(kadiraInfo.trace, 'db', {\n        func: '_nextObject',\n        coll: this._cursorDescription.collectionName\n      });\n    }\n    let result = origNextObject.call(this);\n    if (shouldTrack) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n    }\n    return result;\n  };\n}","map":{"version":3,"names":["module","export","hijackDBOps","Meteor","link","v","Random","Mongo","MongoInternals","_","haveAsyncCallback","OptimizedApply","originalOpen","RemoteCollectionDriver","prototype","open","name","self","ret","call","each","fn","m","mongo","Array","unshift","arguments","getSyncronousCursor","MongoColl","Collection","coll","concat","id","findOne","cursor","find","fetch","_synchronousCursor","constructor","mongoConnectionProto","MeteorX","MongoConnection","forEach","func","originalFunc","collName","selector","mod","options","payload","index","JSON","stringify","upsert","kadiraInfo","Kadira","_getInfo","eventId","tracer","event","trace","apply","endOptions","async","updatedDocs","numberAffected","insertedId","removedDocs","eventEnd","ex","err","message","cursorProto","MongoCursor","type","cursorDescription","_cursorDescription","Object","assign","create","collectionName","cursorOptions","pick","field","value","previousTrackNextObject","trackNextObject","endData","observerDriver","oplog","wasMultiplexerReady","_wasMultiplexerReady","queueLength","_queueLength","elapsedPollingTime","_elapsedPollingTime","_multiplexer","_observeDriver","observerDriverClass","cursorSupported","size","_cache","docs","noOfCachedDocs","initialPollingTime","_lastPollTime","reasonInfo","checkWhyNoOplog","noOplogCode","code","noOplogReason","reason","noOplogSolution","solution","docsFetched","length","query","opts","docSize","docSzCache","getSize","models","methods","trackDocSize","pubsub","SyncronousCursor","origNextObject","_nextObject","shouldTrack","result"],"sources":["packages/montiapm:agent/lib/hijack/db.js"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { Mongo, MongoInternals } from 'meteor/mongo';\nimport { _ } from 'meteor/underscore';\nimport {haveAsyncCallback, OptimizedApply} from '../utils';\n\n\n// This hijack is important to make sure, collections created before\n// we hijack dbOps, even gets tracked.\n//  Meteor does not simply expose MongoConnection object to the client\n//  It picks methods which are necessary and make a binded object and\n//  assigned to the Mongo.Collection\n//  so, even we updated prototype, we can't track those collections\n//  but, this will fix it.\n\nlet originalOpen = MongoInternals.RemoteCollectionDriver.prototype.open;\nMongoInternals.RemoteCollectionDriver.prototype.open = function open (name) {\n  let self = this;\n  let ret = originalOpen.call(self, name);\n\n  _.each(ret, function (fn, m) {\n    // make sure, it's in the actual mongo connection object\n    // meteorhacks:mongo-collection-utils package add some arbitary methods\n    // which does not exist in the mongo connection\n    if (self.mongo[m]) {\n      ret[m] = function () {\n        Array.prototype.unshift.call(arguments, name);\n        return OptimizedApply(self.mongo, self.mongo[m], arguments);\n      };\n    }\n  });\n\n  return ret;\n};\n\n// TODO: this should be added to Meteorx\nfunction getSyncronousCursor () {\n  const MongoColl = typeof Mongo !== 'undefined' ? Mongo.Collection : Meteor.Collection;\n  const coll = new MongoColl(`__dummy_coll_${Random.id()}`);\n  // we need to wait until the db is connected with meteor. findOne does that\n  coll.findOne();\n\n  const cursor = coll.find();\n  cursor.fetch();\n  return cursor._synchronousCursor.constructor;\n}\n\nexport function hijackDBOps () {\n  let mongoConnectionProto = MeteorX.MongoConnection.prototype;\n  // findOne is handled by find - so no need to track it\n  // upsert is handles by update\n  // 2.4 replaced _ensureIndex with createIndex\n  [\n    'find', 'update', 'remove', 'insert', '_ensureIndex', '_dropIndex', 'createIndex'\n  ].forEach(function (func) {\n    let originalFunc = mongoConnectionProto[func];\n\n    if (!originalFunc) {\n      return;\n    }\n\n    mongoConnectionProto[func] = function (collName, selector, mod, options) {\n      let payload = {\n        coll: collName,\n        func,\n      };\n\n      if (func === 'insert') {\n        // add nothing more to the payload\n      } else if (func === '_ensureIndex' || func === '_dropIndex' || func === 'createIndex') {\n        // add index\n        payload.index = JSON.stringify(selector);\n      } else if (func === 'update' && options && options.upsert) {\n        payload.func = 'upsert';\n        payload.selector = JSON.stringify(selector);\n      } else {\n        // all the other functions have selectors\n        payload.selector = JSON.stringify(selector);\n      }\n\n      let kadiraInfo = Kadira._getInfo();\n\n      let eventId;\n\n      if (kadiraInfo) {\n        eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      }\n\n      // this cause V8 to avoid any performance optimizations, but this is must use\n      // otherwise, if the error adds try catch block our logs get messy and didn't work\n      // see: issue #6\n\n      let ret;\n\n      try {\n        ret = originalFunc.apply(this, arguments);\n        // handling functions which can be triggered with an asyncCallback\n        let endOptions = {};\n\n        if (haveAsyncCallback(arguments)) {\n          endOptions.async = true;\n        }\n\n        if (func === 'update') {\n          // upsert only returns an object when called `upsert` directly\n          // otherwise it only act an update command\n          if (options && options.upsert && typeof ret === 'object') {\n            endOptions.updatedDocs = ret.numberAffected;\n            endOptions.insertedId = ret.insertedId;\n          } else {\n            endOptions.updatedDocs = ret;\n          }\n        } else if (func === 'remove') {\n          endOptions.removedDocs = ret;\n        }\n\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n        }\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n        }\n        throw ex;\n      }\n\n      return ret;\n    };\n  });\n\n  let cursorProto = MeteorX.MongoCursor.prototype;\n  ['forEach', 'map', 'fetch', 'count', 'observeChanges', 'observe'].forEach(function (type) {\n    let originalFunc = cursorProto[type];\n    cursorProto[type] = function () {\n      let cursorDescription = this._cursorDescription;\n      let payload = Object.assign(Object.create(null), {\n        coll: cursorDescription.collectionName,\n        selector: JSON.stringify(cursorDescription.selector),\n        func: type,\n        cursor: true\n      });\n\n      if (cursorDescription.options) {\n        let cursorOptions = _.pick(cursorDescription.options, ['fields', 'projection', 'sort', 'limit']);\n        for (let field in cursorOptions) {\n          let value = cursorOptions[field];\n          if (typeof value === 'object') {\n            value = JSON.stringify(value);\n          }\n          payload[field] = value;\n        }\n      }\n\n      let kadiraInfo = Kadira._getInfo();\n      let previousTrackNextObject;\n      let eventId;\n\n      if (kadiraInfo) {\n        eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n\n        previousTrackNextObject = kadiraInfo.trackNextObject;\n        if (type === 'forEach' || type === 'map') {\n          kadiraInfo.trackNextObject = true;\n        }\n      }\n\n      try {\n        let ret = originalFunc.apply(this, arguments);\n\n        let endData = {};\n\n        if (type === 'observeChanges' || type === 'observe') {\n          let observerDriver;\n          endData.oplog = false;\n          // get data written by the multiplexer\n          endData.wasMultiplexerReady = ret._wasMultiplexerReady;\n          endData.queueLength = ret._queueLength;\n          endData.elapsedPollingTime = ret._elapsedPollingTime;\n\n          if (ret._multiplexer) {\n            // older meteor versions done not have an _multiplexer value\n            observerDriver = ret._multiplexer._observeDriver;\n            if (observerDriver) {\n              observerDriver = ret._multiplexer._observeDriver;\n              let observerDriverClass = observerDriver.constructor;\n              endData.oplog = typeof observerDriverClass.cursorSupported === 'function';\n\n              let size = 0;\n              ret._multiplexer._cache.docs.forEach(function () {\n                size++;\n              });\n              endData.noOfCachedDocs = size;\n\n              // if multiplexerWasNotReady, we need to get the time spend for the polling\n              if (!ret._wasMultiplexerReady) {\n                endData.initialPollingTime = observerDriver._lastPollTime;\n              }\n            }\n          }\n\n          if (!endData.oplog) {\n            // let's try to find the reason\n            let reasonInfo = Kadira.checkWhyNoOplog(cursorDescription, observerDriver);\n            endData.noOplogCode = reasonInfo.code;\n            endData.noOplogReason = reasonInfo.reason;\n            endData.noOplogSolution = reasonInfo.solution;\n          }\n        } else if (type === 'fetch' || type === 'map') {\n          // for other cursor operation\n\n          endData.docsFetched = ret.length;\n\n          if (type === 'fetch') {\n            let coll = cursorDescription.collectionName;\n            let query = cursorDescription.selector;\n            let opts = cursorDescription.options;\n            let docSize = Kadira.docSzCache.getSize(coll, query, opts, ret) * ret.length;\n            endData.docSize = docSize;\n\n            if (kadiraInfo) {\n              if (kadiraInfo.trace.type === 'method') {\n                Kadira.models.methods.trackDocSize(kadiraInfo.trace.name, docSize);\n              } else if (kadiraInfo.trace.type === 'sub') {\n                Kadira.models.pubsub.trackDocSize(kadiraInfo.trace.name, 'cursorFetches', docSize);\n              }\n\n              kadiraInfo.trackNextObject = previousTrackNextObject;\n            } else {\n              // Fetch with no kadira info are tracked as from a null method\n              Kadira.models.methods.trackDocSize('<not-a-method-or-a-pub>', docSize);\n            }\n\n            // TODO: Add doc size tracking to `map` as well.\n          }\n        }\n\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endData);\n        }\n        return ret;\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n        }\n        throw ex;\n      }\n    };\n  });\n\n  const SyncronousCursor = getSyncronousCursor();\n  let origNextObject = SyncronousCursor.prototype._nextObject;\n  SyncronousCursor.prototype._nextObject = function () {\n    let kadiraInfo = Kadira._getInfo();\n    let shouldTrack = kadiraInfo && kadiraInfo.trackNextObject;\n    let event;\n    if (shouldTrack ) {\n      event = Kadira.tracer.event(kadiraInfo.trace, 'db', {\n        func: '_nextObject',\n        coll: this._cursorDescription.collectionName\n      });\n    }\n\n    let result = origNextObject.call(this);\n\n    if (shouldTrack) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n    }\n    return result;\n  };\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"83a84cb6fcd61577dd0ed04a0fae287b43de9a35"}
