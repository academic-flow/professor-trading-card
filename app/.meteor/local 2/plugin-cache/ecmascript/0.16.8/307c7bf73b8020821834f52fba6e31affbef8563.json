{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/phatca/Documents/GitHub/professor-trading-card/app/imports/api/stuff/Stuff.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/api/stuff/Stuff.js","filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/imports/api/stuff/Stuff.js","inputSourceMap":{"version":3,"names":["Mongo","SimpleSchema","StuffsCollection","constructor","name","collection","Collection","schema","String","quantity","Number","owner","condition","type","allowedValues","defaultValue","attachSchema","userPublicationName","adminPublicationName","Stuffs"],"sources":["imports/api/stuff/Stuff.js"],"sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\n/**\n * The StuffsCollection. It encapsulates state and variable values for stuff.\n */\nclass StuffsCollection {\n  constructor() {\n    // The name of this collection.\n    this.name = 'StuffsCollection';\n    // Define the Mongo collection.\n    this.collection = new Mongo.Collection(this.name);\n    // Define the structure of each document in the collection.\n    this.schema = new SimpleSchema({\n      name: String,\n      quantity: Number,\n      owner: String,\n      condition: {\n        type: String,\n        allowedValues: ['excellent', 'good', 'fair', 'poor'],\n        defaultValue: 'good',\n      },\n    });\n    // Attach the schema to the collection, so all attempts to insert a document are checked against schema.\n    this.collection.attachSchema(this.schema);\n    // Define names for publications and subscriptions\n    this.userPublicationName = `${this.name}.publication.user`;\n    this.adminPublicationName = `${this.name}.publication.admin`;\n  }\n}\n\n/**\n * The singleton instance of the StuffsCollection.\n * @type {StuffsCollection}\n */\nexport const Stuffs = new StuffsCollection();\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,cAAc;AACpC,OAAOC,YAAY,MAAM,cAAc;;AAEvC;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ;IACA,IAAI,CAACC,IAAI,GAAG,kBAAkB;IAC9B;IACA,IAAI,CAACC,UAAU,GAAG,IAAIL,KAAK,CAACM,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC;IACjD;IACA,IAAI,CAACG,MAAM,GAAG,IAAIN,YAAY,CAAC;MAC7BG,IAAI,EAAEI,MAAM;MACZC,QAAQ,EAAEC,MAAM;MAChBC,KAAK,EAAEH,MAAM;MACbI,SAAS,EAAE;QACTC,IAAI,EAAEL,MAAM;QACZM,aAAa,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACpDC,YAAY,EAAE;MAChB;IACF,CAAC,CAAC;IACF;IACA,IAAI,CAACV,UAAU,CAACW,YAAY,CAAC,IAAI,CAACT,MAAM,CAAC;IACzC;IACA,IAAI,CAACU,mBAAmB,GAAI,GAAE,IAAI,CAACb,IAAK,mBAAkB;IAC1D,IAAI,CAACc,oBAAoB,GAAI,GAAE,IAAI,CAACd,IAAK,oBAAmB;EAC9D;AACF;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMe,MAAM,GAAG,IAAIjB,gBAAgB,CAAC,CAAC"},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/phatca/Documents/GitHub/professor-trading-card/app","root":"/Users/phatca/Documents/GitHub/professor-trading-card/app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/phatca/Documents/GitHub/professor-trading-card/app/imports/api/stuff/Stuff.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/stuff/Stuff.js","inputSourceMap":{"version":3,"names":["Mongo","SimpleSchema","StuffsCollection","constructor","name","collection","Collection","schema","String","quantity","Number","owner","condition","type","allowedValues","defaultValue","attachSchema","userPublicationName","adminPublicationName","Stuffs"],"sources":["imports/api/stuff/Stuff.js"],"sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\n/**\n * The StuffsCollection. It encapsulates state and variable values for stuff.\n */\nclass StuffsCollection {\n  constructor() {\n    // The name of this collection.\n    this.name = 'StuffsCollection';\n    // Define the Mongo collection.\n    this.collection = new Mongo.Collection(this.name);\n    // Define the structure of each document in the collection.\n    this.schema = new SimpleSchema({\n      name: String,\n      quantity: Number,\n      owner: String,\n      condition: {\n        type: String,\n        allowedValues: ['excellent', 'good', 'fair', 'poor'],\n        defaultValue: 'good',\n      },\n    });\n    // Attach the schema to the collection, so all attempts to insert a document are checked against schema.\n    this.collection.attachSchema(this.schema);\n    // Define names for publications and subscriptions\n    this.userPublicationName = `${this.name}.publication.user`;\n    this.adminPublicationName = `${this.name}.publication.admin`;\n  }\n}\n\n/**\n * The singleton instance of the StuffsCollection.\n * @type {StuffsCollection}\n */\nexport const Stuffs = new StuffsCollection();\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,cAAc;AACpC,OAAOC,YAAY,MAAM,cAAc;;AAEvC;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ;IACA,IAAI,CAACC,IAAI,GAAG,kBAAkB;IAC9B;IACA,IAAI,CAACC,UAAU,GAAG,IAAIL,KAAK,CAACM,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC;IACjD;IACA,IAAI,CAACG,MAAM,GAAG,IAAIN,YAAY,CAAC;MAC7BG,IAAI,EAAEI,MAAM;MACZC,QAAQ,EAAEC,MAAM;MAChBC,KAAK,EAAEH,MAAM;MACbI,SAAS,EAAE;QACTC,IAAI,EAAEL,MAAM;QACZM,aAAa,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACpDC,YAAY,EAAE;MAChB;IACF,CAAC,CAAC;IACF;IACA,IAAI,CAACV,UAAU,CAACW,YAAY,CAAC,IAAI,CAACT,MAAM,CAAC;IACzC;IACA,IAAI,CAACU,mBAAmB,GAAI,GAAE,IAAI,CAACb,IAAK,mBAAkB;IAC1D,IAAI,CAACc,oBAAoB,GAAI,GAAE,IAAI,CAACd,IAAK,oBAAmB;EAC9D;AACF;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMe,MAAM,GAAG,IAAIjB,gBAAgB,CAAC,CAAC"}}},"code":"!function (module1) {\n  module1.export({\n    Stuffs: () => Stuffs\n  });\n  let Mongo;\n  module1.link(\"meteor/mongo\", {\n    Mongo(v) {\n      Mongo = v;\n    }\n  }, 0);\n  let SimpleSchema;\n  module1.link(\"simpl-schema\", {\n    default(v) {\n      SimpleSchema = v;\n    }\n  }, 1);\n  ___INIT_METEOR_FAST_REFRESH(module);\n  /**\n   * The StuffsCollection. It encapsulates state and variable values for stuff.\n   */\n  class StuffsCollection {\n    constructor() {\n      // The name of this collection.\n      this.name = 'StuffsCollection';\n      // Define the Mongo collection.\n      this.collection = new Mongo.Collection(this.name);\n      // Define the structure of each document in the collection.\n      this.schema = new SimpleSchema({\n        name: String,\n        quantity: Number,\n        owner: String,\n        condition: {\n          type: String,\n          allowedValues: ['excellent', 'good', 'fair', 'poor'],\n          defaultValue: 'good'\n        }\n      });\n      // Attach the schema to the collection, so all attempts to insert a document are checked against schema.\n      this.collection.attachSchema(this.schema);\n      // Define names for publications and subscriptions\n      this.userPublicationName = \"\".concat(this.name, \".publication.user\");\n      this.adminPublicationName = \"\".concat(this.name, \".publication.admin\");\n    }\n  }\n\n  /**\n   * The singleton instance of the StuffsCollection.\n   * @type {StuffsCollection}\n   */\n  const Stuffs = new StuffsCollection();\n}.call(this, module);","map":{"version":3,"names":["StuffsCollection","constructor","name","collection","Mongo","Collection","schema","SimpleSchema","String","quantity","Number","owner","condition","type","allowedValues","defaultValue","attachSchema","userPublicationName","concat","adminPublicationName","Stuffs","call","module"],"sources":["imports/api/stuff/Stuff.js"],"sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\n/**\n * The StuffsCollection. It encapsulates state and variable values for stuff.\n */\nclass StuffsCollection {\n  constructor() {\n    // The name of this collection.\n    this.name = 'StuffsCollection';\n    // Define the Mongo collection.\n    this.collection = new Mongo.Collection(this.name);\n    // Define the structure of each document in the collection.\n    this.schema = new SimpleSchema({\n      name: String,\n      quantity: Number,\n      owner: String,\n      condition: {\n        type: String,\n        allowedValues: ['excellent', 'good', 'fair', 'poor'],\n        defaultValue: 'good',\n      },\n    });\n    // Attach the schema to the collection, so all attempts to insert a document are checked against schema.\n    this.collection.attachSchema(this.schema);\n    // Define names for publications and subscriptions\n    this.userPublicationName = `${this.name}.publication.user`;\n    this.adminPublicationName = `${this.name}.publication.admin`;\n  }\n}\n\n/**\n * The singleton instance of the StuffsCollection.\n * @type {StuffsCollection}\n */\nexport const Stuffs = new StuffsCollection();\n"],"mappings":";;;;;;;;;;;;;;;;;EAGA;AACA;AACA;EACA,MAAMA,gBAAgB,CAAC;IACrBC,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,CAACC,IAAI,GAAG,kBAAkB;MAC9B;MACA,IAAI,CAACC,UAAU,GAAG,IAAIC,KAAK,CAACC,UAAU,CAAC,IAAI,CAACH,IAAI,CAAC;MACjD;MACA,IAAI,CAACI,MAAM,GAAG,IAAIC,YAAY,CAAC;QAC7BL,IAAI,EAAEM,MAAM;QACZC,QAAQ,EAAEC,MAAM;QAChBC,KAAK,EAAEH,MAAM;QACbI,SAAS,EAAE;UACTC,IAAI,EAAEL,MAAM;UACZM,aAAa,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;UACpDC,YAAY,EAAE;QAChB;MACF,CAAC,CAAC;MACF;MACA,IAAI,CAACZ,UAAU,CAACa,YAAY,CAAC,IAAI,CAACV,MAAM,CAAC;MACzC;MACA,IAAI,CAACW,mBAAmB,MAAAC,MAAA,CAAM,IAAI,CAAChB,IAAK,sBAAkB;MAC1D,IAAI,CAACiB,oBAAoB,MAAAD,MAAA,CAAM,IAAI,CAAChB,IAAK,uBAAmB;IAC9D;EACF;;EAEA;AACA;AACA;AACA;EACO,MAAMkB,MAAM,GAAG,IAAIpB,gBAAgB,CAAC,CAAC;AAAA,EAAAqB,IAAA,OAAAC,MAAA"},"sourceType":"module","externalDependencies":{},"hash":"307c7bf73b8020821834f52fba6e31affbef8563"}
